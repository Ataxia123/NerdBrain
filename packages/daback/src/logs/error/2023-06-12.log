2023-06-12 10:24:08 error: uncaughtException: Invalid input: "The signed address 0x1b419B2be5f7e3C033b3DEAa9f574Cd42663eefc does not own profile 0x8585"!
Error: Invalid input: "The signed address 0x1b419B2be5f7e3C033b3DEAa9f574Cd42663eefc does not own profile 0x8585"!
    at t [as constructor] (/home/at0x/hackzor/stools/packages/daback/node_modules/@lens-protocol/sdk-gated/dist/index.js:1:11991)
    at new t (/home/at0x/hackzor/stools/packages/daback/node_modules/@lens-protocol/sdk-gated/dist/index.js:1:14505)
    at e.<anonymous> (/home/at0x/hackzor/stools/packages/daback/node_modules/@lens-protocol/sdk-gated/dist/index.js:7:791791)
    at /home/at0x/hackzor/stools/packages/daback/node_modules/@lens-protocol/sdk-gated/dist/index.js:1:11641
    at Object.next (/home/at0x/hackzor/stools/packages/daback/node_modules/@lens-protocol/sdk-gated/dist/index.js:1:11746)
    at s (/home/at0x/hackzor/stools/packages/daback/node_modules/@lens-protocol/sdk-gated/dist/index.js:1:10464)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-06-12 10:42:47 error: uncaughtException: Cannot read properties of undefined (reading 'encryptionParams')
TypeError: Cannot read properties of undefined (reading 'encryptionParams')
    at createPost (/home/at0x/hackzor/stools/packages/daback/src/scripts/createGatedPost.ts:75:46)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-06-12 12:15:27 error: uncaughtException: EIO: i/o error, write
Error: EIO: i/o error, write
    at writeSync (node:fs:920:3)
    at SyncWriteStream._write (node:internal/fs/sync_write_stream:26:3)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at SyncWriteStream.Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/at0x/hackzor/stools/packages/daback/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/at0x/hackzor/stools/packages/daback/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/at0x/hackzor/stools/packages/daback/node_modules/readable-stream/lib/_stream_writable.js:390:139)
    at writeOrBuffer (/home/at0x/hackzor/stools/packages/daback/node_modules/readable-stream/lib/_stream_writable.js:381:5)
    at Console.Writable.write (/home/at0x/hackzor/stools/packages/daback/node_modules/readable-stream/lib/_stream_writable.js:302:11)
2023-06-12 15:10:47 error: uncaughtException: EIO: i/o error, write
Error: EIO: i/o error, write
    at writeSync (node:fs:920:3)
    at SyncWriteStream._write (node:internal/fs/sync_write_stream:26:3)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at SyncWriteStream.Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/at0x/hackzor/stools/packages/daback/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/at0x/hackzor/stools/packages/daback/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/at0x/hackzor/stools/packages/daback/node_modules/readable-stream/lib/_stream_writable.js:390:139)
    at writeOrBuffer (/home/at0x/hackzor/stools/packages/daback/node_modules/readable-stream/lib/_stream_writable.js:381:5)
    at Console.Writable.write (/home/at0x/hackzor/stools/packages/daback/node_modules/readable-stream/lib/_stream_writable.js:302:11)
2023-06-12 15:10:47 error: uncaughtException: listen EADDRINUSE: address already in use :::8546
Error: listen EADDRINUSE: address already in use :::8546
    at Server.setupListenHandle [as _listen2] (node:net:1740:16)
    at listenInCluster (node:net:1788:12)
    at Server.listen (node:net:1876:7)
    at Function.listen (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/application.js:635:24)
    at App.listen (/home/at0x/hackzor/stools/packages/daback/src/app.ts:33:14)
    at Object.<anonymous> (/home/at0x/hackzor/stools/packages/daback/src/server.ts:10:5)
    at Module._compile (node:internal/modules/cjs/loader:1246:14)
    at Module.m._compile (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1618:23)
    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)
    at Object.require.extensions.<computed> [as .ts] (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1621:12)
2023-06-12 15:12:29 error: uncaughtException: Currency is not enabled: {"response":{"errors":[{"message":"Currency is not enabled","locations":[{"line":2,"column":3}],"path":["result"],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Currency is not enabled","    at validateCurrencyIsEnabled (/usr/src/app/packages/api-lens/lib/services/modules/collect/collect.module.shared-validation.service.js:22:15)","    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","    at async Object.validateInputParams (/usr/src/app/packages/api-lens/lib/services/modules/collect/multirecipient-fee-collect.module.service.js:371:9)","    at async validateCollectModuleParams (/usr/src/app/packages/api-lens/lib/services/modules/collect/collect.module.service.js:389:5)","    at async validatePublicationInput (/usr/src/app/packages/api-lens/lib/services/publication.service.js:469:5)","    at async PublicationResolver.createPostTypedData (/usr/src/app/packages/api-lens/lib/graphql/resolvers/publications/publication-resolver.js:200:9)","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)","    at async /usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:83:26","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)","    at async /usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:83:26","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)"]}}}],"data":null,"status":200,"headers":{}},"request":{"query":"mutation CreatePostTypedData($request: CreatePublicPostRequest!, $options: TypedDataOptions) {\n  result: createPostTypedData(request: $request, options: $options) {\n    ...CreatePostTypedData\n  }\n}\n\nfragment CreatePostTypedData on CreatePostBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      PostWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      collectModule\n      collectModuleInitData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","contentURI":"https://arweave.net/NpmBc5kmiQwSMfXl_0-VBErh2sXUCEJ_sMg-5C07S4g","collectModule":{"multirecipientFeeCollectModule":{"amount":{"currency":"0xD40282e050723Ae26Aeb0F77022dB14470f4e011","value":"0.01"},"recipients":[{"recipient":"0xEEA0C1f5ab0159dba749Dc0BAee462E5e293daaF","split":99},{"recipient":"0xEEA0C1f5ab0159dba749Dc0BAee462E5e293daaB","split":1}],"referralFee":10,"followerOnly":false}},"referenceModule":{"followerOnlyReferenceModule":false},"gated":{"encryptedSymmetricKey":"f425cd1753f785f8e46b3e71ded4e2e9a43c1c4c6e675a74197f878d768c544de86d68558dec40d7f5a48da3f5883c01a3becf741914e04149308eeeceda98db41e08c63ed27f66d09c5f9430bacb3872837bf7d586c4c2b91cf395d29feea8f4e99a02c7721a89c823c17d38bfc89185adf6f2ac77ac6c09a6c725ff197ea9f00000000000000207c60054531f549133d0e3b2e0a44388ce1e6ca1d5e231f7d668d849e7881b5cd7ea9afcfaa60f04f6088e6f704267296","collect":{"thisPublication":true}}}}}}
Error: Currency is not enabled: {"response":{"errors":[{"message":"Currency is not enabled","locations":[{"line":2,"column":3}],"path":["result"],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Currency is not enabled","    at validateCurrencyIsEnabled (/usr/src/app/packages/api-lens/lib/services/modules/collect/collect.module.shared-validation.service.js:22:15)","    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","    at async Object.validateInputParams (/usr/src/app/packages/api-lens/lib/services/modules/collect/multirecipient-fee-collect.module.service.js:371:9)","    at async validateCollectModuleParams (/usr/src/app/packages/api-lens/lib/services/modules/collect/collect.module.service.js:389:5)","    at async validatePublicationInput (/usr/src/app/packages/api-lens/lib/services/publication.service.js:469:5)","    at async PublicationResolver.createPostTypedData (/usr/src/app/packages/api-lens/lib/graphql/resolvers/publications/publication-resolver.js:200:9)","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)","    at async /usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:83:26","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)","    at async /usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:83:26","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)"]}}}],"data":null,"status":200,"headers":{}},"request":{"query":"mutation CreatePostTypedData($request: CreatePublicPostRequest!, $options: TypedDataOptions) {\n  result: createPostTypedData(request: $request, options: $options) {\n    ...CreatePostTypedData\n  }\n}\n\nfragment CreatePostTypedData on CreatePostBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      PostWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      collectModule\n      collectModuleInitData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","contentURI":"https://arweave.net/NpmBc5kmiQwSMfXl_0-VBErh2sXUCEJ_sMg-5C07S4g","collectModule":{"multirecipientFeeCollectModule":{"amount":{"currency":"0xD40282e050723Ae26Aeb0F77022dB14470f4e011","value":"0.01"},"recipients":[{"recipient":"0xEEA0C1f5ab0159dba749Dc0BAee462E5e293daaF","split":99},{"recipient":"0xEEA0C1f5ab0159dba749Dc0BAee462E5e293daaB","split":1}],"referralFee":10,"followerOnly":false}},"referenceModule":{"followerOnlyReferenceModule":false},"gated":{"encryptedSymmetricKey":"f425cd1753f785f8e46b3e71ded4e2e9a43c1c4c6e675a74197f878d768c544de86d68558dec40d7f5a48da3f5883c01a3becf741914e04149308eeeceda98db41e08c63ed27f66d09c5f9430bacb3872837bf7d586c4c2b91cf395d29feea8f4e99a02c7721a89c823c17d38bfc89185adf6f2ac77ac6c09a6c725ff197ea9f00000000000000207c60054531f549133d0e3b2e0a44388ce1e6ca1d5e231f7d668d849e7881b5cd7ea9afcfaa60f04f6088e6f704267296","collect":{"thisPublication":true}}}}}}
    at makeRequest (/home/at0x/hackzor/stools/packages/daback/node_modules/graphql-request/src/index.ts:441:11)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-06-12 15:18:32 error: uncaughtException: Currency is not enabled: {"response":{"errors":[{"message":"Currency is not enabled","locations":[{"line":2,"column":3}],"path":["result"],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Currency is not enabled","    at validateCurrencyIsEnabled (/usr/src/app/packages/api-lens/lib/services/modules/collect/collect.module.shared-validation.service.js:22:15)","    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","    at async Object.validateInputParams (/usr/src/app/packages/api-lens/lib/services/modules/collect/multirecipient-fee-collect.module.service.js:371:9)","    at async validateCollectModuleParams (/usr/src/app/packages/api-lens/lib/services/modules/collect/collect.module.service.js:389:5)","    at async validatePublicationInput (/usr/src/app/packages/api-lens/lib/services/publication.service.js:469:5)","    at async PublicationResolver.createPostTypedData (/usr/src/app/packages/api-lens/lib/graphql/resolvers/publications/publication-resolver.js:200:9)","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)","    at async /usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:83:26","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)","    at async /usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:83:26","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)"]}}}],"data":null,"status":200,"headers":{}},"request":{"query":"mutation CreatePostTypedData($request: CreatePublicPostRequest!, $options: TypedDataOptions) {\n  result: createPostTypedData(request: $request, options: $options) {\n    ...CreatePostTypedData\n  }\n}\n\nfragment CreatePostTypedData on CreatePostBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      PostWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      collectModule\n      collectModuleInitData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","contentURI":"https://arweave.net/GyaK5xj46fPA0u5zsSWEdvTKGSSioI86FyMK5d0JMLs","collectModule":{"multirecipientFeeCollectModule":{"amount":{"currency":"0x20c9560d42566d6ead1da3dc84137e84838fa696","value":"0.01"},"recipients":[{"recipient":"0xEEA0C1f5ab0159dba749Dc0BAee462E5e293daaF","split":99},{"recipient":"0xEEA0C1f5ab0159dba749Dc0BAee462E5e293daaB","split":1}],"referralFee":10,"followerOnly":false}},"referenceModule":{"followerOnlyReferenceModule":false},"gated":{"encryptedSymmetricKey":"ad335cedac4adac2280495cb52962c3fa4809a148789069d57fb983d3a265fd7be2fd7ae57ce8186a800fbffbe8a8e01c82d7c94fbe2c64d0544a594fa57c65c6bbfbc221b39caed2f2e012fadd707a8a55c8609c714283beb1764218092e6a5e0bb7b4d088bb2a572925614f5c9b5bb62e849147331c39663b3fd732831d7e20000000000000020a8fb7182b48a75ec9e3e17347ec355f7cab89091d665164315fdede8245c923e423e4e7e7b75fec323d577bf53052195","collect":{"thisPublication":true}}}}}}
Error: Currency is not enabled: {"response":{"errors":[{"message":"Currency is not enabled","locations":[{"line":2,"column":3}],"path":["result"],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Currency is not enabled","    at validateCurrencyIsEnabled (/usr/src/app/packages/api-lens/lib/services/modules/collect/collect.module.shared-validation.service.js:22:15)","    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","    at async Object.validateInputParams (/usr/src/app/packages/api-lens/lib/services/modules/collect/multirecipient-fee-collect.module.service.js:371:9)","    at async validateCollectModuleParams (/usr/src/app/packages/api-lens/lib/services/modules/collect/collect.module.service.js:389:5)","    at async validatePublicationInput (/usr/src/app/packages/api-lens/lib/services/publication.service.js:469:5)","    at async PublicationResolver.createPostTypedData (/usr/src/app/packages/api-lens/lib/graphql/resolvers/publications/publication-resolver.js:200:9)","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)","    at async /usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:83:26","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)","    at async /usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:83:26","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)"]}}}],"data":null,"status":200,"headers":{}},"request":{"query":"mutation CreatePostTypedData($request: CreatePublicPostRequest!, $options: TypedDataOptions) {\n  result: createPostTypedData(request: $request, options: $options) {\n    ...CreatePostTypedData\n  }\n}\n\nfragment CreatePostTypedData on CreatePostBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      PostWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      collectModule\n      collectModuleInitData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","contentURI":"https://arweave.net/GyaK5xj46fPA0u5zsSWEdvTKGSSioI86FyMK5d0JMLs","collectModule":{"multirecipientFeeCollectModule":{"amount":{"currency":"0x20c9560d42566d6ead1da3dc84137e84838fa696","value":"0.01"},"recipients":[{"recipient":"0xEEA0C1f5ab0159dba749Dc0BAee462E5e293daaF","split":99},{"recipient":"0xEEA0C1f5ab0159dba749Dc0BAee462E5e293daaB","split":1}],"referralFee":10,"followerOnly":false}},"referenceModule":{"followerOnlyReferenceModule":false},"gated":{"encryptedSymmetricKey":"ad335cedac4adac2280495cb52962c3fa4809a148789069d57fb983d3a265fd7be2fd7ae57ce8186a800fbffbe8a8e01c82d7c94fbe2c64d0544a594fa57c65c6bbfbc221b39caed2f2e012fadd707a8a55c8609c714283beb1764218092e6a5e0bb7b4d088bb2a572925614f5c9b5bb62e849147331c39663b3fd732831d7e20000000000000020a8fb7182b48a75ec9e3e17347ec355f7cab89091d665164315fdede8245c923e423e4e7e7b75fec323d577bf53052195","collect":{"thisPublication":true}}}}}}
    at makeRequest (/home/at0x/hackzor/stools/packages/daback/node_modules/graphql-request/src/index.ts:441:11)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-06-12 15:46:30 error: uncaughtException: Cannot read properties of undefined (reading 'toString')
TypeError: Cannot read properties of undefined (reading 'toString')
    at createPost (/home/at0x/hackzor/stools/packages/daback/src/scripts/createGatedPost.ts:42:23)
    at UserService.postMessage (/home/at0x/hackzor/stools/packages/daback/src/services/users.service.ts:88:17)
    at UserController.postThingy (/home/at0x/hackzor/stools/packages/daback/src/controllers/users.controller.ts:21:40)
    at Layer.handle [as handle_request] (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/layer.js:95:5)
    at next (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/route.js:144:13)
    at Route.dispatch (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/route.js:114:3)
    at Layer.handle [as handle_request] (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/layer.js:95:5)
    at /home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/index.js:346:12)
    at next (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/index.js:280:10)
2023-06-12 15:49:38 error: uncaughtException: Variable "$request" got invalid value { split: 99 } at "request.collectModule.multirecipientFeeCollectModule.recipients[0]"; Field "recipient" of required type "EthereumAddress!" was not provided.: {"response":{"errors":[{"message":"Variable \"$request\" got invalid value { split: 99 } at \"request.collectModule.multirecipientFeeCollectModule.recipients[0]\"; Field \"recipient\" of required type \"EthereumAddress!\" was not provided.","locations":[{"line":1,"column":30}],"extensions":{"code":"BAD_USER_INPUT","exception":{"stacktrace":["GraphQLError: Variable \"$request\" got invalid value { split: 99 } at \"request.collectModule.multirecipientFeeCollectModule.recipients[0]\"; Field \"recipient\" of required type \"EthereumAddress!\" was not provided.","    at /usr/src/app/node_modules/graphql/execution/values.js:116:15","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:99:11)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValue (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:37:10)","    at _loop (/usr/src/app/node_modules/graphql/execution/values.js:109:69)","    at coerceVariableValues (/usr/src/app/node_modules/graphql/execution/values.js:121:16)"]}}},{"message":"Variable \"$request\" got invalid value {} at \"request.collectModule.multirecipientFeeCollectModule.recipients[1].recipient\"; Expected type \"EthereumAddress\". Value supplied is not a valid hex string or uint8array","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Value supplied is not a valid hex string or uint8array","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:35:15)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}}],"status":400,"headers":{}},"request":{"query":"mutation CreatePostTypedData($request: CreatePublicPostRequest!, $options: TypedDataOptions) {\n  result: createPostTypedData(request: $request, options: $options) {\n    ...CreatePostTypedData\n  }\n}\n\nfragment CreatePostTypedData on CreatePostBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      PostWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      collectModule\n      collectModuleInitData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","contentURI":"https://arweave.net/DqHFxZMPDSmFSLcbqC1YYylloh2YqanUSfxhrgsm5vc","collectModule":{"multirecipientFeeCollectModule":{"amount":{"currency":"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889","value":"1"},"recipients":[{"split":99},{"recipient":{},"split":1}],"referralFee":10,"followerOnly":false}},"referenceModule":{"followerOnlyReferenceModule":false},"gated":{"encryptedSymmetricKey":"4b7db4f11f8efdad153f5fd2076ab266e4e70a55465d879ac068a1b6760d6f03c6a577240966b38436e86455d9f3a51871481db4016dd7ca93845529ee35f428625f01b6caa0e23b01ee67eb95218dcdfc4a46b6f4a8c27ef364b02204f182a50f6c8372973ab50b2ec919649af238e1f73e98bcd88035547ff8276a6d2c918e0000000000000020c728432e26feae79f3c84e2ec4f1cf958f62753fcc2c67328620cb49f530d9a3f7a5be5ea237bc25ff999dd9459fc2a9","collect":{"thisPublication":true}}}}}}
Error: Variable "$request" got invalid value { split: 99 } at "request.collectModule.multirecipientFeeCollectModule.recipients[0]"; Field "recipient" of required type "EthereumAddress!" was not provided.: {"response":{"errors":[{"message":"Variable \"$request\" got invalid value { split: 99 } at \"request.collectModule.multirecipientFeeCollectModule.recipients[0]\"; Field \"recipient\" of required type \"EthereumAddress!\" was not provided.","locations":[{"line":1,"column":30}],"extensions":{"code":"BAD_USER_INPUT","exception":{"stacktrace":["GraphQLError: Variable \"$request\" got invalid value { split: 99 } at \"request.collectModule.multirecipientFeeCollectModule.recipients[0]\"; Field \"recipient\" of required type \"EthereumAddress!\" was not provided.","    at /usr/src/app/node_modules/graphql/execution/values.js:116:15","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:99:11)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValue (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:37:10)","    at _loop (/usr/src/app/node_modules/graphql/execution/values.js:109:69)","    at coerceVariableValues (/usr/src/app/node_modules/graphql/execution/values.js:121:16)"]}}},{"message":"Variable \"$request\" got invalid value {} at \"request.collectModule.multirecipientFeeCollectModule.recipients[1].recipient\"; Expected type \"EthereumAddress\". Value supplied is not a valid hex string or uint8array","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Value supplied is not a valid hex string or uint8array","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:35:15)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}}],"status":400,"headers":{}},"request":{"query":"mutation CreatePostTypedData($request: CreatePublicPostRequest!, $options: TypedDataOptions) {\n  result: createPostTypedData(request: $request, options: $options) {\n    ...CreatePostTypedData\n  }\n}\n\nfragment CreatePostTypedData on CreatePostBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      PostWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      collectModule\n      collectModuleInitData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","contentURI":"https://arweave.net/DqHFxZMPDSmFSLcbqC1YYylloh2YqanUSfxhrgsm5vc","collectModule":{"multirecipientFeeCollectModule":{"amount":{"currency":"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889","value":"1"},"recipients":[{"split":99},{"recipient":{},"split":1}],"referralFee":10,"followerOnly":false}},"referenceModule":{"followerOnlyReferenceModule":false},"gated":{"encryptedSymmetricKey":"4b7db4f11f8efdad153f5fd2076ab266e4e70a55465d879ac068a1b6760d6f03c6a577240966b38436e86455d9f3a51871481db4016dd7ca93845529ee35f428625f01b6caa0e23b01ee67eb95218dcdfc4a46b6f4a8c27ef364b02204f182a50f6c8372973ab50b2ec919649af238e1f73e98bcd88035547ff8276a6d2c918e0000000000000020c728432e26feae79f3c84e2ec4f1cf958f62753fcc2c67328620cb49f530d9a3f7a5be5ea237bc25ff999dd9459fc2a9","collect":{"thisPublication":true}}}}}}
    at makeRequest (/home/at0x/hackzor/stools/packages/daback/node_modules/graphql-request/src/index.ts:441:11)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-06-12 15:57:29 error: uncaughtException: Cannot read properties of undefined (reading 'toString')
TypeError: Cannot read properties of undefined (reading 'toString')
    at createPost (/home/at0x/hackzor/stools/packages/daback/src/scripts/createGatedPost.ts:42:23)
    at UserService.postMessage (/home/at0x/hackzor/stools/packages/daback/src/services/users.service.ts:88:17)
    at UserController.postThingy (/home/at0x/hackzor/stools/packages/daback/src/controllers/users.controller.ts:21:40)
    at Layer.handle [as handle_request] (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/layer.js:95:5)
    at next (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/route.js:144:13)
    at Route.dispatch (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/route.js:114:3)
    at Layer.handle [as handle_request] (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/layer.js:95:5)
    at /home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/index.js:346:12)
    at next (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/index.js:280:10)
2023-06-12 15:57:46 error: uncaughtException: Cannot read properties of undefined (reading 'toString')
TypeError: Cannot read properties of undefined (reading 'toString')
    at createPost (/home/at0x/hackzor/stools/packages/daback/src/scripts/createGatedPost.ts:42:23)
    at UserService.postMessage (/home/at0x/hackzor/stools/packages/daback/src/services/users.service.ts:88:17)
    at UserController.postThingy (/home/at0x/hackzor/stools/packages/daback/src/controllers/users.controller.ts:21:40)
    at Layer.handle [as handle_request] (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/layer.js:95:5)
    at next (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/route.js:144:13)
    at Route.dispatch (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/route.js:114:3)
    at Layer.handle [as handle_request] (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/layer.js:95:5)
    at /home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/index.js:346:12)
    at next (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/index.js:280:10)
2023-06-12 15:59:11 error: uncaughtException: Cannot read properties of undefined (reading 'toString')
TypeError: Cannot read properties of undefined (reading 'toString')
    at createPost (/home/at0x/hackzor/stools/packages/daback/src/scripts/createGatedPost.ts:42:23)
    at UserService.postMessage (/home/at0x/hackzor/stools/packages/daback/src/services/users.service.ts:88:17)
    at UserController.postThingy (/home/at0x/hackzor/stools/packages/daback/src/controllers/users.controller.ts:21:40)
    at Layer.handle [as handle_request] (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/layer.js:95:5)
    at next (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/route.js:144:13)
    at Route.dispatch (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/route.js:114:3)
    at Layer.handle [as handle_request] (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/layer.js:95:5)
    at /home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/index.js:346:12)
    at next (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/index.js:280:10)
2023-06-12 16:01:30 error: uncaughtException: Variable "$request" got invalid value { split: 99 } at "request.collectModule.multirecipientFeeCollectModule.recipients[0]"; Field "recipient" of required type "EthereumAddress!" was not provided.: {"response":{"errors":[{"message":"Variable \"$request\" got invalid value { split: 99 } at \"request.collectModule.multirecipientFeeCollectModule.recipients[0]\"; Field \"recipient\" of required type \"EthereumAddress!\" was not provided.","locations":[{"line":1,"column":30}],"extensions":{"code":"BAD_USER_INPUT","exception":{"stacktrace":["GraphQLError: Variable \"$request\" got invalid value { split: 99 } at \"request.collectModule.multirecipientFeeCollectModule.recipients[0]\"; Field \"recipient\" of required type \"EthereumAddress!\" was not provided.","    at /usr/src/app/node_modules/graphql/execution/values.js:116:15","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:99:11)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValue (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:37:10)","    at _loop (/usr/src/app/node_modules/graphql/execution/values.js:109:69)","    at coerceVariableValues (/usr/src/app/node_modules/graphql/execution/values.js:121:16)"]}}},{"message":"Variable \"$request\" got invalid value {} at \"request.collectModule.multirecipientFeeCollectModule.recipients[1].recipient\"; Expected type \"EthereumAddress\". Value supplied is not a valid hex string or uint8array","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Value supplied is not a valid hex string or uint8array","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:35:15)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}}],"status":400,"headers":{}},"request":{"query":"mutation CreatePostTypedData($request: CreatePublicPostRequest!, $options: TypedDataOptions) {\n  result: createPostTypedData(request: $request, options: $options) {\n    ...CreatePostTypedData\n  }\n}\n\nfragment CreatePostTypedData on CreatePostBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      PostWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      collectModule\n      collectModuleInitData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","contentURI":"https://arweave.net/RBlOLfpJ68fBiMxPCqzVCEl6P409QKyd7spQS0wdHR0","collectModule":{"multirecipientFeeCollectModule":{"amount":{"currency":"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889","value":"1"},"recipients":[{"split":99},{"recipient":{},"split":1}],"referralFee":10,"followerOnly":false}},"referenceModule":{"followerOnlyReferenceModule":false},"gated":{"encryptedSymmetricKey":"efb40b56e4b86044d31f0dac6f3e7b627e1f9d00d6dbe7a4aa6d3f46e475a25c69cea3b8d3f4b2c953bfc80a4f48d3138c802236482b2de7f5c5afe42f66353c3dfb60ff309a3f590e32c3c63839ce3ad941ce662c8b92967788edb8de2961b2d7abc459e4770cc54f3a4360a5ca631d5b19299fd04b24e6c238866ce4489c1c0000000000000020e35f26ed4e93d05f4bbece6e50970f1b5f6733dea0b15f1bef4ba5f6bb1d01d1f02d8326ec1633b279ca47bf3b218a8e","collect":{"thisPublication":true}}}}}}
Error: Variable "$request" got invalid value { split: 99 } at "request.collectModule.multirecipientFeeCollectModule.recipients[0]"; Field "recipient" of required type "EthereumAddress!" was not provided.: {"response":{"errors":[{"message":"Variable \"$request\" got invalid value { split: 99 } at \"request.collectModule.multirecipientFeeCollectModule.recipients[0]\"; Field \"recipient\" of required type \"EthereumAddress!\" was not provided.","locations":[{"line":1,"column":30}],"extensions":{"code":"BAD_USER_INPUT","exception":{"stacktrace":["GraphQLError: Variable \"$request\" got invalid value { split: 99 } at \"request.collectModule.multirecipientFeeCollectModule.recipients[0]\"; Field \"recipient\" of required type \"EthereumAddress!\" was not provided.","    at /usr/src/app/node_modules/graphql/execution/values.js:116:15","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:99:11)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValue (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:37:10)","    at _loop (/usr/src/app/node_modules/graphql/execution/values.js:109:69)","    at coerceVariableValues (/usr/src/app/node_modules/graphql/execution/values.js:121:16)"]}}},{"message":"Variable \"$request\" got invalid value {} at \"request.collectModule.multirecipientFeeCollectModule.recipients[1].recipient\"; Expected type \"EthereumAddress\". Value supplied is not a valid hex string or uint8array","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Value supplied is not a valid hex string or uint8array","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:35:15)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}}],"status":400,"headers":{}},"request":{"query":"mutation CreatePostTypedData($request: CreatePublicPostRequest!, $options: TypedDataOptions) {\n  result: createPostTypedData(request: $request, options: $options) {\n    ...CreatePostTypedData\n  }\n}\n\nfragment CreatePostTypedData on CreatePostBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      PostWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      collectModule\n      collectModuleInitData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","contentURI":"https://arweave.net/RBlOLfpJ68fBiMxPCqzVCEl6P409QKyd7spQS0wdHR0","collectModule":{"multirecipientFeeCollectModule":{"amount":{"currency":"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889","value":"1"},"recipients":[{"split":99},{"recipient":{},"split":1}],"referralFee":10,"followerOnly":false}},"referenceModule":{"followerOnlyReferenceModule":false},"gated":{"encryptedSymmetricKey":"efb40b56e4b86044d31f0dac6f3e7b627e1f9d00d6dbe7a4aa6d3f46e475a25c69cea3b8d3f4b2c953bfc80a4f48d3138c802236482b2de7f5c5afe42f66353c3dfb60ff309a3f590e32c3c63839ce3ad941ce662c8b92967788edb8de2961b2d7abc459e4770cc54f3a4360a5ca631d5b19299fd04b24e6c238866ce4489c1c0000000000000020e35f26ed4e93d05f4bbece6e50970f1b5f6733dea0b15f1bef4ba5f6bb1d01d1f02d8326ec1633b279ca47bf3b218a8e","collect":{"thisPublication":true}}}}}}
    at makeRequest (/home/at0x/hackzor/stools/packages/daback/node_modules/graphql-request/src/index.ts:441:11)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-06-12 16:03:07 error: uncaughtException: Variable "$request" got invalid value "undefined" at "request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient"; Expected type "EthereumAddress". String supplied is not a hex string - undefined: {"response":{"errors":[{"message":"Variable \"$request\" got invalid value \"undefined\" at \"request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient\"; Expected type \"EthereumAddress\". String supplied is not a hex string - undefined","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: String supplied is not a hex string - undefined","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:24:23)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}},{"message":"Variable \"$request\" got invalid value {} at \"request.collectModule.multirecipientFeeCollectModule.recipients[1].recipient\"; Expected type \"EthereumAddress\". Value supplied is not a valid hex string or uint8array","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Value supplied is not a valid hex string or uint8array","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:35:15)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}}],"status":400,"headers":{}},"request":{"query":"mutation CreatePostTypedData($request: CreatePublicPostRequest!, $options: TypedDataOptions) {\n  result: createPostTypedData(request: $request, options: $options) {\n    ...CreatePostTypedData\n  }\n}\n\nfragment CreatePostTypedData on CreatePostBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      PostWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      collectModule\n      collectModuleInitData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","contentURI":"https://arweave.net/aI0xsHVIuW6KE8FKAshIg6ei--Vb5hUemvdVPai-6_A","collectModule":{"multirecipientFeeCollectModule":{"amount":{"currency":"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889","value":"1"},"recipients":[{"recipient":"undefined","split":99},{"recipient":{},"split":1}],"referralFee":10,"followerOnly":false}},"referenceModule":{"followerOnlyReferenceModule":false},"gated":{"encryptedSymmetricKey":"cba2e7c54f83a87784a0839489236eadba48f0a7d3c90b3cebbfa477fa55201be40b57c1142d826e44e6818ee78f1a0615b698521914fd90e086fbef158a000e9933d7938e2a7c6c377e30ae07cc4aabea7e91affc76a9c1a0c5999f18b247901eec0779d644b869c23c3cec5d8960d462bc7fdce7e677e33e2128abbf129cb90000000000000020d70cc7b6efbfc81ab063a993879b2e7911f2c9e7e247e001868a94343ad6bce2644a6de8eba5b95aea77f9dc61af0db3","collect":{"thisPublication":true}}}}}}
Error: Variable "$request" got invalid value "undefined" at "request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient"; Expected type "EthereumAddress". String supplied is not a hex string - undefined: {"response":{"errors":[{"message":"Variable \"$request\" got invalid value \"undefined\" at \"request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient\"; Expected type \"EthereumAddress\". String supplied is not a hex string - undefined","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: String supplied is not a hex string - undefined","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:24:23)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}},{"message":"Variable \"$request\" got invalid value {} at \"request.collectModule.multirecipientFeeCollectModule.recipients[1].recipient\"; Expected type \"EthereumAddress\". Value supplied is not a valid hex string or uint8array","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Value supplied is not a valid hex string or uint8array","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:35:15)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}}],"status":400,"headers":{}},"request":{"query":"mutation CreatePostTypedData($request: CreatePublicPostRequest!, $options: TypedDataOptions) {\n  result: createPostTypedData(request: $request, options: $options) {\n    ...CreatePostTypedData\n  }\n}\n\nfragment CreatePostTypedData on CreatePostBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      PostWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      collectModule\n      collectModuleInitData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","contentURI":"https://arweave.net/aI0xsHVIuW6KE8FKAshIg6ei--Vb5hUemvdVPai-6_A","collectModule":{"multirecipientFeeCollectModule":{"amount":{"currency":"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889","value":"1"},"recipients":[{"recipient":"undefined","split":99},{"recipient":{},"split":1}],"referralFee":10,"followerOnly":false}},"referenceModule":{"followerOnlyReferenceModule":false},"gated":{"encryptedSymmetricKey":"cba2e7c54f83a87784a0839489236eadba48f0a7d3c90b3cebbfa477fa55201be40b57c1142d826e44e6818ee78f1a0615b698521914fd90e086fbef158a000e9933d7938e2a7c6c377e30ae07cc4aabea7e91affc76a9c1a0c5999f18b247901eec0779d644b869c23c3cec5d8960d462bc7fdce7e677e33e2128abbf129cb90000000000000020d70cc7b6efbfc81ab063a993879b2e7911f2c9e7e247e001868a94343ad6bce2644a6de8eba5b95aea77f9dc61af0db3","collect":{"thisPublication":true}}}}}}
    at makeRequest (/home/at0x/hackzor/stools/packages/daback/node_modules/graphql-request/src/index.ts:441:11)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-06-12 16:06:46 error: uncaughtException: Variable "$request" got invalid value "undefined" at "request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient"; Expected type "EthereumAddress". String supplied is not a hex string - undefined: {"response":{"errors":[{"message":"Variable \"$request\" got invalid value \"undefined\" at \"request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient\"; Expected type \"EthereumAddress\". String supplied is not a hex string - undefined","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: String supplied is not a hex string - undefined","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:24:23)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}},{"message":"Variable \"$request\" got invalid value {} at \"request.collectModule.multirecipientFeeCollectModule.recipients[1].recipient\"; Expected type \"EthereumAddress\". Value supplied is not a valid hex string or uint8array","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Value supplied is not a valid hex string or uint8array","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:35:15)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}}],"status":400,"headers":{}},"request":{"query":"mutation CreatePostTypedData($request: CreatePublicPostRequest!, $options: TypedDataOptions) {\n  result: createPostTypedData(request: $request, options: $options) {\n    ...CreatePostTypedData\n  }\n}\n\nfragment CreatePostTypedData on CreatePostBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      PostWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      collectModule\n      collectModuleInitData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","contentURI":"https://arweave.net/Li9IG2BJBZtnMDHg30VXpKHHl88CAfVmeMlc9vz5rTs","collectModule":{"multirecipientFeeCollectModule":{"amount":{"currency":"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889","value":"1"},"recipients":[{"recipient":"undefined","split":99},{"recipient":{},"split":1}],"referralFee":10,"followerOnly":false}},"referenceModule":{"followerOnlyReferenceModule":false},"gated":{"encryptedSymmetricKey":"3bea85b7a97c48d828f9d339cac919d4d473e5e1df020ff04c41f822f6c74a8dd7741ee48f262b7a9ced009267c9b413ad73080d0619d83e81738345d2e13924690d206f62c29beb241640cf7f5e47bb6b9618de95649797a051ef1633afbe9012f9def1360611ec9a19537becd4224d9b4a3f3a0fd1675e94041030e652a21f0000000000000020f83e4816e05b6bc72b82635ca00035414f1b6a0351cde3d3ff8c8058eeb435ef36aa4b6d9e42d19521bde78fa2bbb894","collect":{"thisPublication":true}}}}}}
Error: Variable "$request" got invalid value "undefined" at "request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient"; Expected type "EthereumAddress". String supplied is not a hex string - undefined: {"response":{"errors":[{"message":"Variable \"$request\" got invalid value \"undefined\" at \"request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient\"; Expected type \"EthereumAddress\". String supplied is not a hex string - undefined","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: String supplied is not a hex string - undefined","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:24:23)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}},{"message":"Variable \"$request\" got invalid value {} at \"request.collectModule.multirecipientFeeCollectModule.recipients[1].recipient\"; Expected type \"EthereumAddress\". Value supplied is not a valid hex string or uint8array","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Value supplied is not a valid hex string or uint8array","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:35:15)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}}],"status":400,"headers":{}},"request":{"query":"mutation CreatePostTypedData($request: CreatePublicPostRequest!, $options: TypedDataOptions) {\n  result: createPostTypedData(request: $request, options: $options) {\n    ...CreatePostTypedData\n  }\n}\n\nfragment CreatePostTypedData on CreatePostBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      PostWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      collectModule\n      collectModuleInitData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","contentURI":"https://arweave.net/Li9IG2BJBZtnMDHg30VXpKHHl88CAfVmeMlc9vz5rTs","collectModule":{"multirecipientFeeCollectModule":{"amount":{"currency":"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889","value":"1"},"recipients":[{"recipient":"undefined","split":99},{"recipient":{},"split":1}],"referralFee":10,"followerOnly":false}},"referenceModule":{"followerOnlyReferenceModule":false},"gated":{"encryptedSymmetricKey":"3bea85b7a97c48d828f9d339cac919d4d473e5e1df020ff04c41f822f6c74a8dd7741ee48f262b7a9ced009267c9b413ad73080d0619d83e81738345d2e13924690d206f62c29beb241640cf7f5e47bb6b9618de95649797a051ef1633afbe9012f9def1360611ec9a19537becd4224d9b4a3f3a0fd1675e94041030e652a21f0000000000000020f83e4816e05b6bc72b82635ca00035414f1b6a0351cde3d3ff8c8058eeb435ef36aa4b6d9e42d19521bde78fa2bbb894","collect":{"thisPublication":true}}}}}}
    at makeRequest (/home/at0x/hackzor/stools/packages/daback/node_modules/graphql-request/src/index.ts:441:11)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-06-12 16:10:12 error: uncaughtException: Cannot read properties of undefined (reading 'toString')
TypeError: Cannot read properties of undefined (reading 'toString')
    at createPost (/home/at0x/hackzor/stools/packages/daback/src/scripts/createGatedPost.ts:42:23)
    at UserService.postMessage (/home/at0x/hackzor/stools/packages/daback/src/services/users.service.ts:88:17)
    at UserController.postThingy (/home/at0x/hackzor/stools/packages/daback/src/controllers/users.controller.ts:21:40)
    at Layer.handle [as handle_request] (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/layer.js:95:5)
    at next (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/route.js:144:13)
    at Route.dispatch (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/route.js:114:3)
    at Layer.handle [as handle_request] (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/layer.js:95:5)
    at /home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/index.js:346:12)
    at next (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/index.js:280:10)
2023-06-12 16:15:24 error: uncaughtException: Cannot read properties of undefined (reading 'toString')
TypeError: Cannot read properties of undefined (reading 'toString')
    at createPost (/home/at0x/hackzor/stools/packages/daback/src/scripts/createGatedPost.ts:42:23)
    at UserService.postMessage (/home/at0x/hackzor/stools/packages/daback/src/services/users.service.ts:88:17)
    at UserController.postThingy (/home/at0x/hackzor/stools/packages/daback/src/controllers/users.controller.ts:21:40)
    at Layer.handle [as handle_request] (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/layer.js:95:5)
    at next (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/route.js:144:13)
    at Route.dispatch (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/route.js:114:3)
    at Layer.handle [as handle_request] (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/layer.js:95:5)
    at /home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/index.js:346:12)
    at next (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/index.js:280:10)
2023-06-12 16:16:13 error: uncaughtException: Cannot read properties of undefined (reading 'toString')
TypeError: Cannot read properties of undefined (reading 'toString')
    at createPost (/home/at0x/hackzor/stools/packages/daback/src/scripts/createGatedPost.ts:42:23)
    at UserService.postMessage (/home/at0x/hackzor/stools/packages/daback/src/services/users.service.ts:88:17)
    at UserController.postThingy (/home/at0x/hackzor/stools/packages/daback/src/controllers/users.controller.ts:21:40)
    at Layer.handle [as handle_request] (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/layer.js:95:5)
    at next (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/route.js:144:13)
    at Route.dispatch (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/route.js:114:3)
    at Layer.handle [as handle_request] (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/layer.js:95:5)
    at /home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/index.js:346:12)
    at next (/home/at0x/hackzor/stools/packages/daback/node_modules/express/lib/router/index.js:280:10)
2023-06-12 16:17:29 error: uncaughtException: Variable "$request" got invalid value "undefined" at "request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient"; Expected type "EthereumAddress". String supplied is not a hex string - undefined: {"response":{"errors":[{"message":"Variable \"$request\" got invalid value \"undefined\" at \"request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient\"; Expected type \"EthereumAddress\". String supplied is not a hex string - undefined","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: String supplied is not a hex string - undefined","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:24:23)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}},{"message":"Variable \"$request\" got invalid value {} at \"request.collectModule.multirecipientFeeCollectModule.recipients[1].recipient\"; Expected type \"EthereumAddress\". Value supplied is not a valid hex string or uint8array","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Value supplied is not a valid hex string or uint8array","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:35:15)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}}],"status":400,"headers":{}},"request":{"query":"mutation CreatePostTypedData($request: CreatePublicPostRequest!, $options: TypedDataOptions) {\n  result: createPostTypedData(request: $request, options: $options) {\n    ...CreatePostTypedData\n  }\n}\n\nfragment CreatePostTypedData on CreatePostBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      PostWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      collectModule\n      collectModuleInitData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","contentURI":"https://arweave.net/qsE6X1nCEKlDYc3FhEpBxKpPgD1aPI41tu5gOyn3OgE","collectModule":{"multirecipientFeeCollectModule":{"amount":{"currency":"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889","value":"1"},"recipients":[{"recipient":"undefined","split":99},{"recipient":{},"split":1}],"referralFee":10,"followerOnly":false}},"referenceModule":{"followerOnlyReferenceModule":false},"gated":{"encryptedSymmetricKey":"092f3d07d86f137d2e50245593473569628207c2c52b739146d8ad5dd88b238e8c4b78168d2aedf8e032872cfe54f6170438b3f5a4727d1008c595d01b991eb61a11de081237cbd30b0077f8f26f200c46f6af486828c0c9f8c8dca3613f79846f1fd5ae92a15c861faedea4bac6d21c55b28de27401c1886f6a76d6ce39b53a0000000000000020d7570790388a0ad62defa1ea53d8d387cde19d2b1a5d23fb81405ac368c9f6da5bc2a70a90e253de33dc42537055b4a5","collect":{"thisPublication":true}}}}}}
Error: Variable "$request" got invalid value "undefined" at "request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient"; Expected type "EthereumAddress". String supplied is not a hex string - undefined: {"response":{"errors":[{"message":"Variable \"$request\" got invalid value \"undefined\" at \"request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient\"; Expected type \"EthereumAddress\". String supplied is not a hex string - undefined","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: String supplied is not a hex string - undefined","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:24:23)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}},{"message":"Variable \"$request\" got invalid value {} at \"request.collectModule.multirecipientFeeCollectModule.recipients[1].recipient\"; Expected type \"EthereumAddress\". Value supplied is not a valid hex string or uint8array","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Value supplied is not a valid hex string or uint8array","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:35:15)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}}],"status":400,"headers":{}},"request":{"query":"mutation CreatePostTypedData($request: CreatePublicPostRequest!, $options: TypedDataOptions) {\n  result: createPostTypedData(request: $request, options: $options) {\n    ...CreatePostTypedData\n  }\n}\n\nfragment CreatePostTypedData on CreatePostBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      PostWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      collectModule\n      collectModuleInitData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","contentURI":"https://arweave.net/qsE6X1nCEKlDYc3FhEpBxKpPgD1aPI41tu5gOyn3OgE","collectModule":{"multirecipientFeeCollectModule":{"amount":{"currency":"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889","value":"1"},"recipients":[{"recipient":"undefined","split":99},{"recipient":{},"split":1}],"referralFee":10,"followerOnly":false}},"referenceModule":{"followerOnlyReferenceModule":false},"gated":{"encryptedSymmetricKey":"092f3d07d86f137d2e50245593473569628207c2c52b739146d8ad5dd88b238e8c4b78168d2aedf8e032872cfe54f6170438b3f5a4727d1008c595d01b991eb61a11de081237cbd30b0077f8f26f200c46f6af486828c0c9f8c8dca3613f79846f1fd5ae92a15c861faedea4bac6d21c55b28de27401c1886f6a76d6ce39b53a0000000000000020d7570790388a0ad62defa1ea53d8d387cde19d2b1a5d23fb81405ac368c9f6da5bc2a70a90e253de33dc42537055b4a5","collect":{"thisPublication":true}}}}}}
    at makeRequest (/home/at0x/hackzor/stools/packages/daback/node_modules/graphql-request/src/index.ts:441:11)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-06-12 16:19:05 error: uncaughtException: Variable "$request" got invalid value "undefined" at "request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient"; Expected type "EthereumAddress". String supplied is not a hex string - undefined: {"response":{"errors":[{"message":"Variable \"$request\" got invalid value \"undefined\" at \"request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient\"; Expected type \"EthereumAddress\". String supplied is not a hex string - undefined","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: String supplied is not a hex string - undefined","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:24:23)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}},{"message":"Variable \"$request\" got invalid value {} at \"request.collectModule.multirecipientFeeCollectModule.recipients[1].recipient\"; Expected type \"EthereumAddress\". Value supplied is not a valid hex string or uint8array","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Value supplied is not a valid hex string or uint8array","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:35:15)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}}],"status":400,"headers":{}},"request":{"query":"mutation CreatePostTypedData($request: CreatePublicPostRequest!, $options: TypedDataOptions) {\n  result: createPostTypedData(request: $request, options: $options) {\n    ...CreatePostTypedData\n  }\n}\n\nfragment CreatePostTypedData on CreatePostBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      PostWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      collectModule\n      collectModuleInitData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","contentURI":"https://arweave.net/059FHqx5EgtDMf-fDdTQ0ZFzy3_6dFCpTg5kbbuqwi4","collectModule":{"multirecipientFeeCollectModule":{"amount":{"currency":"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889","value":"1"},"recipients":[{"recipient":"undefined","split":99},{"recipient":{},"split":1}],"referralFee":10,"followerOnly":false}},"referenceModule":{"followerOnlyReferenceModule":false},"gated":{"encryptedSymmetricKey":"fb2986c18aee9d122bb9d3d3b65459868c65b7f0d40b4509f49006bce26228e2441a365ecb0ea035b8c762b1e38b2e19c06bd509e9520ffc49bbc31a685f56079d4bf010546fc4dd0dfbb537cc1d075186afd2c0f4288ff2e0983446f12de28509d0e6be589499f777f0969058e1288639159b3f832cefed24bb81ae53aed83c0000000000000020a29236b23bffe2a03e51f8df180771f5ae5f341c6b4851338c7a377b4dfea6366d4f37645d9c9142f556ce63aa2ad983","collect":{"thisPublication":true}}}}}}
Error: Variable "$request" got invalid value "undefined" at "request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient"; Expected type "EthereumAddress". String supplied is not a hex string - undefined: {"response":{"errors":[{"message":"Variable \"$request\" got invalid value \"undefined\" at \"request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient\"; Expected type \"EthereumAddress\". String supplied is not a hex string - undefined","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: String supplied is not a hex string - undefined","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:24:23)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}},{"message":"Variable \"$request\" got invalid value {} at \"request.collectModule.multirecipientFeeCollectModule.recipients[1].recipient\"; Expected type \"EthereumAddress\". Value supplied is not a valid hex string or uint8array","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Value supplied is not a valid hex string or uint8array","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:35:15)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}}],"status":400,"headers":{}},"request":{"query":"mutation CreatePostTypedData($request: CreatePublicPostRequest!, $options: TypedDataOptions) {\n  result: createPostTypedData(request: $request, options: $options) {\n    ...CreatePostTypedData\n  }\n}\n\nfragment CreatePostTypedData on CreatePostBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      PostWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      collectModule\n      collectModuleInitData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","contentURI":"https://arweave.net/059FHqx5EgtDMf-fDdTQ0ZFzy3_6dFCpTg5kbbuqwi4","collectModule":{"multirecipientFeeCollectModule":{"amount":{"currency":"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889","value":"1"},"recipients":[{"recipient":"undefined","split":99},{"recipient":{},"split":1}],"referralFee":10,"followerOnly":false}},"referenceModule":{"followerOnlyReferenceModule":false},"gated":{"encryptedSymmetricKey":"fb2986c18aee9d122bb9d3d3b65459868c65b7f0d40b4509f49006bce26228e2441a365ecb0ea035b8c762b1e38b2e19c06bd509e9520ffc49bbc31a685f56079d4bf010546fc4dd0dfbb537cc1d075186afd2c0f4288ff2e0983446f12de28509d0e6be589499f777f0969058e1288639159b3f832cefed24bb81ae53aed83c0000000000000020a29236b23bffe2a03e51f8df180771f5ae5f341c6b4851338c7a377b4dfea6366d4f37645d9c9142f556ce63aa2ad983","collect":{"thisPublication":true}}}}}}
    at makeRequest (/home/at0x/hackzor/stools/packages/daback/node_modules/graphql-request/src/index.ts:441:11)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-06-12 16:19:31 error: uncaughtException: Variable "$request" got invalid value "undefined" at "request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient"; Expected type "EthereumAddress". String supplied is not a hex string - undefined: {"response":{"errors":[{"message":"Variable \"$request\" got invalid value \"undefined\" at \"request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient\"; Expected type \"EthereumAddress\". String supplied is not a hex string - undefined","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: String supplied is not a hex string - undefined","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:24:23)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}},{"message":"Variable \"$request\" got invalid value {} at \"request.collectModule.multirecipientFeeCollectModule.recipients[1].recipient\"; Expected type \"EthereumAddress\". Value supplied is not a valid hex string or uint8array","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Value supplied is not a valid hex string or uint8array","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:35:15)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}}],"status":400,"headers":{}},"request":{"query":"mutation CreatePostTypedData($request: CreatePublicPostRequest!, $options: TypedDataOptions) {\n  result: createPostTypedData(request: $request, options: $options) {\n    ...CreatePostTypedData\n  }\n}\n\nfragment CreatePostTypedData on CreatePostBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      PostWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      collectModule\n      collectModuleInitData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","contentURI":"https://arweave.net/69-sljSv8xvX-TGpS5jLAYJTo7_fwIXVdjqnyTro5K8","collectModule":{"multirecipientFeeCollectModule":{"amount":{"currency":"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889","value":"1"},"recipients":[{"recipient":"undefined","split":99},{"recipient":{},"split":1}],"referralFee":10,"followerOnly":false}},"referenceModule":{"followerOnlyReferenceModule":false},"gated":{"encryptedSymmetricKey":"5720aebb81356eba7e833b5bb98bb7669d74a3716cc0901bfcdafd46c2d19eba467086cce6f20ce4440643dc7657f31214d3ebd54cf5bafb9beb8f962a98651e74858a34df2058e27a27998e62d4972da9052801c56307fc2d5eb1294de0ed8088649a0e17af2d0b18c1fa383f4e25d50a36a9a6a51508e115310c0b2f88dd3b00000000000000201491769218dd6329346a30325604e32dcf90d1ea204f2e22292ef856631de42464c315949e1283fcd053fa755caefd96","collect":{"thisPublication":true}}}}}}
Error: Variable "$request" got invalid value "undefined" at "request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient"; Expected type "EthereumAddress". String supplied is not a hex string - undefined: {"response":{"errors":[{"message":"Variable \"$request\" got invalid value \"undefined\" at \"request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient\"; Expected type \"EthereumAddress\". String supplied is not a hex string - undefined","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: String supplied is not a hex string - undefined","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:24:23)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}},{"message":"Variable \"$request\" got invalid value {} at \"request.collectModule.multirecipientFeeCollectModule.recipients[1].recipient\"; Expected type \"EthereumAddress\". Value supplied is not a valid hex string or uint8array","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Value supplied is not a valid hex string or uint8array","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:35:15)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}}],"status":400,"headers":{}},"request":{"query":"mutation CreatePostTypedData($request: CreatePublicPostRequest!, $options: TypedDataOptions) {\n  result: createPostTypedData(request: $request, options: $options) {\n    ...CreatePostTypedData\n  }\n}\n\nfragment CreatePostTypedData on CreatePostBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      PostWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      collectModule\n      collectModuleInitData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","contentURI":"https://arweave.net/69-sljSv8xvX-TGpS5jLAYJTo7_fwIXVdjqnyTro5K8","collectModule":{"multirecipientFeeCollectModule":{"amount":{"currency":"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889","value":"1"},"recipients":[{"recipient":"undefined","split":99},{"recipient":{},"split":1}],"referralFee":10,"followerOnly":false}},"referenceModule":{"followerOnlyReferenceModule":false},"gated":{"encryptedSymmetricKey":"5720aebb81356eba7e833b5bb98bb7669d74a3716cc0901bfcdafd46c2d19eba467086cce6f20ce4440643dc7657f31214d3ebd54cf5bafb9beb8f962a98651e74858a34df2058e27a27998e62d4972da9052801c56307fc2d5eb1294de0ed8088649a0e17af2d0b18c1fa383f4e25d50a36a9a6a51508e115310c0b2f88dd3b00000000000000201491769218dd6329346a30325604e32dcf90d1ea204f2e22292ef856631de42464c315949e1283fcd053fa755caefd96","collect":{"thisPublication":true}}}}}}
    at makeRequest (/home/at0x/hackzor/stools/packages/daback/node_modules/graphql-request/src/index.ts:441:11)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-06-12 16:20:56 error: uncaughtException: Variable "$request" got invalid value "undefined" at "request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient"; Expected type "EthereumAddress". String supplied is not a hex string - undefined: {"response":{"errors":[{"message":"Variable \"$request\" got invalid value \"undefined\" at \"request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient\"; Expected type \"EthereumAddress\". String supplied is not a hex string - undefined","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: String supplied is not a hex string - undefined","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:24:23)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}},{"message":"Variable \"$request\" got invalid value {} at \"request.collectModule.multirecipientFeeCollectModule.recipients[1].recipient\"; Expected type \"EthereumAddress\". Value supplied is not a valid hex string or uint8array","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Value supplied is not a valid hex string or uint8array","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:35:15)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}}],"status":400,"headers":{}},"request":{"query":"mutation CreatePostTypedData($request: CreatePublicPostRequest!, $options: TypedDataOptions) {\n  result: createPostTypedData(request: $request, options: $options) {\n    ...CreatePostTypedData\n  }\n}\n\nfragment CreatePostTypedData on CreatePostBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      PostWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      collectModule\n      collectModuleInitData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","contentURI":"https://arweave.net/twy7hNiEDPzAJuABu15QgMITNcKGkQtEPcuUD3Jh2gA","collectModule":{"multirecipientFeeCollectModule":{"amount":{"currency":"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889","value":"1"},"recipients":[{"recipient":"undefined","split":99},{"recipient":{},"split":1}],"referralFee":10,"followerOnly":false}},"referenceModule":{"followerOnlyReferenceModule":false},"gated":{"encryptedSymmetricKey":"5ba3f23bde38577a20e3e0df1732f22dfaa89d6117803c416899ac28870e81e89ad23c6a035c730d820a523d361a0d1365d5932d4d8e82ea4dada9122d42e4dba79b019ed2c63aae6ad720acda06374014244ecc3753f43083a6566ec2b13cb5f92ece33e67f4c573c722c65dc8f0198b32572da180cda3dca3b40ebb18e079e000000000000002095cd37dce047eea0f18bf8a1dd8222dcb98304b4605546e45d77f738cf4417801418d7c51c8a0b55f534861a340568b0","collect":{"thisPublication":true}}}}}}
Error: Variable "$request" got invalid value "undefined" at "request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient"; Expected type "EthereumAddress". String supplied is not a hex string - undefined: {"response":{"errors":[{"message":"Variable \"$request\" got invalid value \"undefined\" at \"request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient\"; Expected type \"EthereumAddress\". String supplied is not a hex string - undefined","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: String supplied is not a hex string - undefined","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:24:23)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}},{"message":"Variable \"$request\" got invalid value {} at \"request.collectModule.multirecipientFeeCollectModule.recipients[1].recipient\"; Expected type \"EthereumAddress\". Value supplied is not a valid hex string or uint8array","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Value supplied is not a valid hex string or uint8array","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:35:15)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}}],"status":400,"headers":{}},"request":{"query":"mutation CreatePostTypedData($request: CreatePublicPostRequest!, $options: TypedDataOptions) {\n  result: createPostTypedData(request: $request, options: $options) {\n    ...CreatePostTypedData\n  }\n}\n\nfragment CreatePostTypedData on CreatePostBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      PostWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      collectModule\n      collectModuleInitData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","contentURI":"https://arweave.net/twy7hNiEDPzAJuABu15QgMITNcKGkQtEPcuUD3Jh2gA","collectModule":{"multirecipientFeeCollectModule":{"amount":{"currency":"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889","value":"1"},"recipients":[{"recipient":"undefined","split":99},{"recipient":{},"split":1}],"referralFee":10,"followerOnly":false}},"referenceModule":{"followerOnlyReferenceModule":false},"gated":{"encryptedSymmetricKey":"5ba3f23bde38577a20e3e0df1732f22dfaa89d6117803c416899ac28870e81e89ad23c6a035c730d820a523d361a0d1365d5932d4d8e82ea4dada9122d42e4dba79b019ed2c63aae6ad720acda06374014244ecc3753f43083a6566ec2b13cb5f92ece33e67f4c573c722c65dc8f0198b32572da180cda3dca3b40ebb18e079e000000000000002095cd37dce047eea0f18bf8a1dd8222dcb98304b4605546e45d77f738cf4417801418d7c51c8a0b55f534861a340568b0","collect":{"thisPublication":true}}}}}}
    at makeRequest (/home/at0x/hackzor/stools/packages/daback/node_modules/graphql-request/src/index.ts:441:11)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-06-12 16:21:22 error: uncaughtException: Variable "$request" got invalid value "undefined" at "request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient"; Expected type "EthereumAddress". String supplied is not a hex string - undefined: {"response":{"errors":[{"message":"Variable \"$request\" got invalid value \"undefined\" at \"request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient\"; Expected type \"EthereumAddress\". String supplied is not a hex string - undefined","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: String supplied is not a hex string - undefined","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:24:23)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}},{"message":"Variable \"$request\" got invalid value {} at \"request.collectModule.multirecipientFeeCollectModule.recipients[1].recipient\"; Expected type \"EthereumAddress\". Value supplied is not a valid hex string or uint8array","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Value supplied is not a valid hex string or uint8array","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:35:15)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}}],"status":400,"headers":{}},"request":{"query":"mutation CreatePostTypedData($request: CreatePublicPostRequest!, $options: TypedDataOptions) {\n  result: createPostTypedData(request: $request, options: $options) {\n    ...CreatePostTypedData\n  }\n}\n\nfragment CreatePostTypedData on CreatePostBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      PostWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      collectModule\n      collectModuleInitData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","contentURI":"https://arweave.net/y0lkTdOZjN3lufpioY8HhFmYTJoSnG5L36PP30O0-Tg","collectModule":{"multirecipientFeeCollectModule":{"amount":{"currency":"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889","value":"1"},"recipients":[{"recipient":"undefined","split":99},{"recipient":{},"split":1}],"referralFee":10,"followerOnly":false}},"referenceModule":{"followerOnlyReferenceModule":false},"gated":{"encryptedSymmetricKey":"95fceeb8cd5798701baf8966d5ba2a707253dffb8c11a67f6d6e4e0f732ec42f25ee6b5ffb1a55ee386ad33f0fdb650f3fde038666e5561ba3dfc880ec2ee3960eff4c6551ac2cbc0dcb9da28583f93b394c9ed1c1ab86d44689e9cfef3f59a1c9662a096dbae7b0b6509e44881ab93e48887165cdb8892105f272ab0164d06c0000000000000020bbc3faa586e9a5ebc39edc1a6c05d425abd78f1ea574b0a8bd8fd42d251af671214781515fd1c4e0c8501c349438c8b8","collect":{"thisPublication":true}}}}}}
Error: Variable "$request" got invalid value "undefined" at "request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient"; Expected type "EthereumAddress". String supplied is not a hex string - undefined: {"response":{"errors":[{"message":"Variable \"$request\" got invalid value \"undefined\" at \"request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient\"; Expected type \"EthereumAddress\". String supplied is not a hex string - undefined","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: String supplied is not a hex string - undefined","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:24:23)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}},{"message":"Variable \"$request\" got invalid value {} at \"request.collectModule.multirecipientFeeCollectModule.recipients[1].recipient\"; Expected type \"EthereumAddress\". Value supplied is not a valid hex string or uint8array","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Value supplied is not a valid hex string or uint8array","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:35:15)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}}],"status":400,"headers":{}},"request":{"query":"mutation CreatePostTypedData($request: CreatePublicPostRequest!, $options: TypedDataOptions) {\n  result: createPostTypedData(request: $request, options: $options) {\n    ...CreatePostTypedData\n  }\n}\n\nfragment CreatePostTypedData on CreatePostBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      PostWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      collectModule\n      collectModuleInitData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","contentURI":"https://arweave.net/y0lkTdOZjN3lufpioY8HhFmYTJoSnG5L36PP30O0-Tg","collectModule":{"multirecipientFeeCollectModule":{"amount":{"currency":"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889","value":"1"},"recipients":[{"recipient":"undefined","split":99},{"recipient":{},"split":1}],"referralFee":10,"followerOnly":false}},"referenceModule":{"followerOnlyReferenceModule":false},"gated":{"encryptedSymmetricKey":"95fceeb8cd5798701baf8966d5ba2a707253dffb8c11a67f6d6e4e0f732ec42f25ee6b5ffb1a55ee386ad33f0fdb650f3fde038666e5561ba3dfc880ec2ee3960eff4c6551ac2cbc0dcb9da28583f93b394c9ed1c1ab86d44689e9cfef3f59a1c9662a096dbae7b0b6509e44881ab93e48887165cdb8892105f272ab0164d06c0000000000000020bbc3faa586e9a5ebc39edc1a6c05d425abd78f1ea574b0a8bd8fd42d251af671214781515fd1c4e0c8501c349438c8b8","collect":{"thisPublication":true}}}}}}
    at makeRequest (/home/at0x/hackzor/stools/packages/daback/node_modules/graphql-request/src/index.ts:441:11)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-06-12 16:22:53 error: uncaughtException: Variable "$request" got invalid value "" at "request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient"; Expected type "EthereumAddress". String supplied is not a hex string - : {"response":{"errors":[{"message":"Variable \"$request\" got invalid value \"\" at \"request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient\"; Expected type \"EthereumAddress\". String supplied is not a hex string - ","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: String supplied is not a hex string - ","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:24:23)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}},{"message":"Variable \"$request\" got invalid value {} at \"request.collectModule.multirecipientFeeCollectModule.recipients[1].recipient\"; Expected type \"EthereumAddress\". Value supplied is not a valid hex string or uint8array","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Value supplied is not a valid hex string or uint8array","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:35:15)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}}],"status":400,"headers":{}},"request":{"query":"mutation CreatePostTypedData($request: CreatePublicPostRequest!, $options: TypedDataOptions) {\n  result: createPostTypedData(request: $request, options: $options) {\n    ...CreatePostTypedData\n  }\n}\n\nfragment CreatePostTypedData on CreatePostBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      PostWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      collectModule\n      collectModuleInitData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","contentURI":"https://arweave.net/pxJrnvUBIr9esXg6RgpoHcxqogdHt7l9kk6k_UBNiIA","collectModule":{"multirecipientFeeCollectModule":{"amount":{"currency":"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889","value":"1"},"recipients":[{"recipient":"","split":99},{"recipient":{},"split":1}],"referralFee":10,"followerOnly":false}},"referenceModule":{"followerOnlyReferenceModule":false},"gated":{"encryptedSymmetricKey":"9c2fdda0265e02ee5b88b8347bf0c623b8f051aca92ba6d0e55736cecb7badb9aa6be949f99b284cd2f38265732fd60af4fff3a0d2e070b825c2ec0c205acfc02d9c9ebbf135654d066413ff646d5ecdd2d76a1232888d8f607eef5e2a574c8141e842be10aad0da71cda1f952db763cf86b8da1077cbfa78d3b677b2167f0920000000000000020802cca707fda54a43eb99eef576b3358cc567c2be46c4ff86bde550447f30b09178f8ed1f76f46391286b3e03f869ca8","collect":{"thisPublication":true}}}}}}
Error: Variable "$request" got invalid value "" at "request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient"; Expected type "EthereumAddress". String supplied is not a hex string - : {"response":{"errors":[{"message":"Variable \"$request\" got invalid value \"\" at \"request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient\"; Expected type \"EthereumAddress\". String supplied is not a hex string - ","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: String supplied is not a hex string - ","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:24:23)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}},{"message":"Variable \"$request\" got invalid value {} at \"request.collectModule.multirecipientFeeCollectModule.recipients[1].recipient\"; Expected type \"EthereumAddress\". Value supplied is not a valid hex string or uint8array","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Value supplied is not a valid hex string or uint8array","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:35:15)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}}],"status":400,"headers":{}},"request":{"query":"mutation CreatePostTypedData($request: CreatePublicPostRequest!, $options: TypedDataOptions) {\n  result: createPostTypedData(request: $request, options: $options) {\n    ...CreatePostTypedData\n  }\n}\n\nfragment CreatePostTypedData on CreatePostBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      PostWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      collectModule\n      collectModuleInitData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","contentURI":"https://arweave.net/pxJrnvUBIr9esXg6RgpoHcxqogdHt7l9kk6k_UBNiIA","collectModule":{"multirecipientFeeCollectModule":{"amount":{"currency":"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889","value":"1"},"recipients":[{"recipient":"","split":99},{"recipient":{},"split":1}],"referralFee":10,"followerOnly":false}},"referenceModule":{"followerOnlyReferenceModule":false},"gated":{"encryptedSymmetricKey":"9c2fdda0265e02ee5b88b8347bf0c623b8f051aca92ba6d0e55736cecb7badb9aa6be949f99b284cd2f38265732fd60af4fff3a0d2e070b825c2ec0c205acfc02d9c9ebbf135654d066413ff646d5ecdd2d76a1232888d8f607eef5e2a574c8141e842be10aad0da71cda1f952db763cf86b8da1077cbfa78d3b677b2167f0920000000000000020802cca707fda54a43eb99eef576b3358cc567c2be46c4ff86bde550447f30b09178f8ed1f76f46391286b3e03f869ca8","collect":{"thisPublication":true}}}}}}
    at makeRequest (/home/at0x/hackzor/stools/packages/daback/node_modules/graphql-request/src/index.ts:441:11)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-06-12 16:24:04 error: uncaughtException: Variable "$request" got invalid value "" at "request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient"; Expected type "EthereumAddress". String supplied is not a hex string - : {"response":{"errors":[{"message":"Variable \"$request\" got invalid value \"\" at \"request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient\"; Expected type \"EthereumAddress\". String supplied is not a hex string - ","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: String supplied is not a hex string - ","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:24:23)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}},{"message":"Variable \"$request\" got invalid value {} at \"request.collectModule.multirecipientFeeCollectModule.recipients[1].recipient\"; Expected type \"EthereumAddress\". Value supplied is not a valid hex string or uint8array","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Value supplied is not a valid hex string or uint8array","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:35:15)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}}],"status":400,"headers":{}},"request":{"query":"mutation CreatePostTypedData($request: CreatePublicPostRequest!, $options: TypedDataOptions) {\n  result: createPostTypedData(request: $request, options: $options) {\n    ...CreatePostTypedData\n  }\n}\n\nfragment CreatePostTypedData on CreatePostBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      PostWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      collectModule\n      collectModuleInitData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","contentURI":"https://arweave.net/KAd8L_Z2aBvm0K-bWRfKiaIFc2jG-qnpqEXOZwUHnuQ","collectModule":{"multirecipientFeeCollectModule":{"amount":{"currency":"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889","value":"1"},"recipients":[{"recipient":"","split":99},{"recipient":{},"split":1}],"referralFee":10,"followerOnly":false}},"referenceModule":{"followerOnlyReferenceModule":false},"gated":{"encryptedSymmetricKey":"38ed7bf277cd91e5f90a19af3d6292dd2eaf12a0605b49673f619a17277b6547a4e5810e2ddafe69aa0afb6399c34d190ce8e2e233be7fb5b84cdd8a967bf87412bb4845931fc289eff8cbafc5dae27ed6fcfe41c2fc2172c905a58d9c21598ef12a6fe21481dd3e81ca9722e29a032f937ff0c70366d4fe497a9c0d60105c010000000000000020659dfb1d128f21071ca2ad3a10ba3ad94147d7f715ea3dde46e81a959f278e0907e7c35d11338f01775f96aa7af2ada8","collect":{"thisPublication":true}}}}}}
Error: Variable "$request" got invalid value "" at "request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient"; Expected type "EthereumAddress". String supplied is not a hex string - : {"response":{"errors":[{"message":"Variable \"$request\" got invalid value \"\" at \"request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient\"; Expected type \"EthereumAddress\". String supplied is not a hex string - ","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: String supplied is not a hex string - ","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:24:23)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}},{"message":"Variable \"$request\" got invalid value {} at \"request.collectModule.multirecipientFeeCollectModule.recipients[1].recipient\"; Expected type \"EthereumAddress\". Value supplied is not a valid hex string or uint8array","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Value supplied is not a valid hex string or uint8array","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:35:15)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}}],"status":400,"headers":{}},"request":{"query":"mutation CreatePostTypedData($request: CreatePublicPostRequest!, $options: TypedDataOptions) {\n  result: createPostTypedData(request: $request, options: $options) {\n    ...CreatePostTypedData\n  }\n}\n\nfragment CreatePostTypedData on CreatePostBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      PostWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      collectModule\n      collectModuleInitData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","contentURI":"https://arweave.net/KAd8L_Z2aBvm0K-bWRfKiaIFc2jG-qnpqEXOZwUHnuQ","collectModule":{"multirecipientFeeCollectModule":{"amount":{"currency":"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889","value":"1"},"recipients":[{"recipient":"","split":99},{"recipient":{},"split":1}],"referralFee":10,"followerOnly":false}},"referenceModule":{"followerOnlyReferenceModule":false},"gated":{"encryptedSymmetricKey":"38ed7bf277cd91e5f90a19af3d6292dd2eaf12a0605b49673f619a17277b6547a4e5810e2ddafe69aa0afb6399c34d190ce8e2e233be7fb5b84cdd8a967bf87412bb4845931fc289eff8cbafc5dae27ed6fcfe41c2fc2172c905a58d9c21598ef12a6fe21481dd3e81ca9722e29a032f937ff0c70366d4fe497a9c0d60105c010000000000000020659dfb1d128f21071ca2ad3a10ba3ad94147d7f715ea3dde46e81a959f278e0907e7c35d11338f01775f96aa7af2ada8","collect":{"thisPublication":true}}}}}}
    at makeRequest (/home/at0x/hackzor/stools/packages/daback/node_modules/graphql-request/src/index.ts:441:11)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-06-12 16:24:23 error: uncaughtException: Variable "$request" got invalid value "{ text: url, msgSender: walletAddress, value: postValue }" at "request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient"; Expected type "EthereumAddress". String supplied is not a hex string - { text: url, msgSender: walletAddress, value: postValue }: {"response":{"errors":[{"message":"Variable \"$request\" got invalid value \"{ text: url, msgSender: walletAddress, value: postValue }\" at \"request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient\"; Expected type \"EthereumAddress\". String supplied is not a hex string - { text: url, msgSender: walletAddress, value: postValue }","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: String supplied is not a hex string - { text: url, msgSender: walletAddress, value: postValue }","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:24:23)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}},{"message":"Variable \"$request\" got invalid value {} at \"request.collectModule.multirecipientFeeCollectModule.recipients[1].recipient\"; Expected type \"EthereumAddress\". Value supplied is not a valid hex string or uint8array","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Value supplied is not a valid hex string or uint8array","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:35:15)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}}],"status":400,"headers":{}},"request":{"query":"mutation CreatePostTypedData($request: CreatePublicPostRequest!, $options: TypedDataOptions) {\n  result: createPostTypedData(request: $request, options: $options) {\n    ...CreatePostTypedData\n  }\n}\n\nfragment CreatePostTypedData on CreatePostBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      PostWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      collectModule\n      collectModuleInitData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","contentURI":"https://arweave.net/i3Mvg5XLGI0W2ouoBsEZ_jrKeNuQr328sdBcwHMvEzk","collectModule":{"multirecipientFeeCollectModule":{"amount":{"currency":"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889","value":"1"},"recipients":[{"recipient":"{ text: url, msgSender: walletAddress, value: postValue }","split":99},{"recipient":{},"split":1}],"referralFee":10,"followerOnly":false}},"referenceModule":{"followerOnlyReferenceModule":false},"gated":{"encryptedSymmetricKey":"9d2dccd293e4ed61e173526c8f195f25862679cb85f710bd2a4814eabdab66c0653dfd3170cc3b36acd16a7c32383d02e00065810329a16b9ba8012270ba801715e9ef5941d741144b62e37c8fce2137ee5dc1dc7ed7e4ba85b6426e2d06b187015fae5ce2cb148df53e865f1f35e3714d766909e0ccf183f3b471f1a031466f000000000000002064c3eb954b07e14672d8e51bd6c77b4de1f740e57b9b6c60f3de9c0a6f8e9abdc23e1418c752953f9000164dadc4e1a3","collect":{"thisPublication":true}}}}}}
Error: Variable "$request" got invalid value "{ text: url, msgSender: walletAddress, value: postValue }" at "request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient"; Expected type "EthereumAddress". String supplied is not a hex string - { text: url, msgSender: walletAddress, value: postValue }: {"response":{"errors":[{"message":"Variable \"$request\" got invalid value \"{ text: url, msgSender: walletAddress, value: postValue }\" at \"request.collectModule.multirecipientFeeCollectModule.recipients[0].recipient\"; Expected type \"EthereumAddress\". String supplied is not a hex string - { text: url, msgSender: walletAddress, value: postValue }","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: String supplied is not a hex string - { text: url, msgSender: walletAddress, value: postValue }","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:24:23)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}},{"message":"Variable \"$request\" got invalid value {} at \"request.collectModule.multirecipientFeeCollectModule.recipients[1].recipient\"; Expected type \"EthereumAddress\". Value supplied is not a valid hex string or uint8array","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Value supplied is not a valid hex string or uint8array","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:35:15)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}}],"status":400,"headers":{}},"request":{"query":"mutation CreatePostTypedData($request: CreatePublicPostRequest!, $options: TypedDataOptions) {\n  result: createPostTypedData(request: $request, options: $options) {\n    ...CreatePostTypedData\n  }\n}\n\nfragment CreatePostTypedData on CreatePostBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      PostWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      collectModule\n      collectModuleInitData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","contentURI":"https://arweave.net/i3Mvg5XLGI0W2ouoBsEZ_jrKeNuQr328sdBcwHMvEzk","collectModule":{"multirecipientFeeCollectModule":{"amount":{"currency":"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889","value":"1"},"recipients":[{"recipient":"{ text: url, msgSender: walletAddress, value: postValue }","split":99},{"recipient":{},"split":1}],"referralFee":10,"followerOnly":false}},"referenceModule":{"followerOnlyReferenceModule":false},"gated":{"encryptedSymmetricKey":"9d2dccd293e4ed61e173526c8f195f25862679cb85f710bd2a4814eabdab66c0653dfd3170cc3b36acd16a7c32383d02e00065810329a16b9ba8012270ba801715e9ef5941d741144b62e37c8fce2137ee5dc1dc7ed7e4ba85b6426e2d06b187015fae5ce2cb148df53e865f1f35e3714d766909e0ccf183f3b471f1a031466f000000000000002064c3eb954b07e14672d8e51bd6c77b4de1f740e57b9b6c60f3de9c0a6f8e9abdc23e1418c752953f9000164dadc4e1a3","collect":{"thisPublication":true}}}}}}
    at makeRequest (/home/at0x/hackzor/stools/packages/daback/node_modules/graphql-request/src/index.ts:441:11)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-06-12 16:27:43 error: uncaughtException: Variable "$request" got invalid value {} at "request.collectModule.multirecipientFeeCollectModule.recipients[1].recipient"; Expected type "EthereumAddress". Value supplied is not a valid hex string or uint8array: {"response":{"errors":[{"message":"Variable \"$request\" got invalid value {} at \"request.collectModule.multirecipientFeeCollectModule.recipients[1].recipient\"; Expected type \"EthereumAddress\". Value supplied is not a valid hex string or uint8array","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Value supplied is not a valid hex string or uint8array","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:35:15)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}}],"status":400,"headers":{}},"request":{"query":"mutation CreatePostTypedData($request: CreatePublicPostRequest!, $options: TypedDataOptions) {\n  result: createPostTypedData(request: $request, options: $options) {\n    ...CreatePostTypedData\n  }\n}\n\nfragment CreatePostTypedData on CreatePostBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      PostWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      collectModule\n      collectModuleInitData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","contentURI":"https://arweave.net/av-GFq-A3FGlvZd41rm8jEeH9nHj6AVzUHEpu06mzwg","collectModule":{"multirecipientFeeCollectModule":{"amount":{"currency":"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889","value":"1"},"recipients":[{"recipient":"0xC349459e55467c402272d414f2B6B148e25aaa8F","split":99},{"recipient":{},"split":1}],"referralFee":10,"followerOnly":false}},"referenceModule":{"followerOnlyReferenceModule":false},"gated":{"encryptedSymmetricKey":"d566ecdc7e8d028a844068b9ecf816bfd03d84e17a0034cb8787c9b177b44c848da8b302586c0c8aabfb5b51517a1313993ff8c96a592de815526ec1b2df92af61a93400746578820442b8f0d5a6db4a1837845cfbc24b21cb1fd4f7de0372abb001675e165e1f06f7925a818b8de22caacce7ca081f8e4d2c989593b92c5388000000000000002028d0941b499a609a7970f3fdef3139c8bad5c4af223cd4d9972e65bf9dc30b1ba1d5a4b9662f5413902f2f2b8caadcab","collect":{"thisPublication":true}}}}}}
Error: Variable "$request" got invalid value {} at "request.collectModule.multirecipientFeeCollectModule.recipients[1].recipient"; Expected type "EthereumAddress". Value supplied is not a valid hex string or uint8array: {"response":{"errors":[{"message":"Variable \"$request\" got invalid value {} at \"request.collectModule.multirecipientFeeCollectModule.recipients[1].recipient\"; Expected type \"EthereumAddress\". Value supplied is not a valid hex string or uint8array","locations":[{"line":1,"column":30}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Value supplied is not a valid hex string or uint8array","    at EthereumAddress.setValue (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:35:15)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:6:14)","    at new BytesType (/usr/src/app/packages/custom-types-shared/lib/base-types/bytes.type.js:12:9)","    at new EthereumAddress (/usr/src/app/packages/custom-types-shared/lib/ethereum-address.type.js:11:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/ethereum-address.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at /usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:70:14","    at Array.map (<anonymous>)","    at safeArrayFrom (/usr/src/app/node_modules/graphql/jsutils/safeArrayFrom.js:36:23)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:68:50)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)"]}}}],"status":400,"headers":{}},"request":{"query":"mutation CreatePostTypedData($request: CreatePublicPostRequest!, $options: TypedDataOptions) {\n  result: createPostTypedData(request: $request, options: $options) {\n    ...CreatePostTypedData\n  }\n}\n\nfragment CreatePostTypedData on CreatePostBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      PostWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      collectModule\n      collectModuleInitData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","contentURI":"https://arweave.net/av-GFq-A3FGlvZd41rm8jEeH9nHj6AVzUHEpu06mzwg","collectModule":{"multirecipientFeeCollectModule":{"amount":{"currency":"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889","value":"1"},"recipients":[{"recipient":"0xC349459e55467c402272d414f2B6B148e25aaa8F","split":99},{"recipient":{},"split":1}],"referralFee":10,"followerOnly":false}},"referenceModule":{"followerOnlyReferenceModule":false},"gated":{"encryptedSymmetricKey":"d566ecdc7e8d028a844068b9ecf816bfd03d84e17a0034cb8787c9b177b44c848da8b302586c0c8aabfb5b51517a1313993ff8c96a592de815526ec1b2df92af61a93400746578820442b8f0d5a6db4a1837845cfbc24b21cb1fd4f7de0372abb001675e165e1f06f7925a818b8de22caacce7ca081f8e4d2c989593b92c5388000000000000002028d0941b499a609a7970f3fdef3139c8bad5c4af223cd4d9972e65bf9dc30b1ba1d5a4b9662f5413902f2f2b8caadcab","collect":{"thisPublication":true}}}}}}
    at makeRequest (/home/at0x/hackzor/stools/packages/daback/node_modules/graphql-request/src/index.ts:441:11)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-06-12 20:25:27 error: uncaughtException: ⨯ Unable to compile TypeScript:
[96msrc/scripts/createGatedPost.ts[0m:[93m162[0m:[93m42[0m - [91merror[0m[90m TS1138: [0mParameter declaration expected.

[7m162[0m   function makePostId(profileId: string, : string) {
[7m   [0m [91m                                         ~[0m

TSError: ⨯ Unable to compile TypeScript:
[96msrc/scripts/createGatedPost.ts[0m:[93m162[0m:[93m42[0m - [91merror[0m[90m TS1138: [0mParameter declaration expected.

[7m162[0m   function makePostId(profileId: string, : string) {
[7m   [0m [91m                                         ~[0m

    at createTSError (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:859:12)
    at reportTSError (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:863:19)
    at /home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1379:34
    at Object.compile (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1458:13)
    at Module.m._compile (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1617:30)
    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)
    at Object.require.extensions.<computed> [as .ts] (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1621:12)
    at Module.load (node:internal/modules/cjs/loader:1103:32)
    at Function.Module._load (node:internal/modules/cjs/loader:942:12)
    at Module.require (node:internal/modules/cjs/loader:1127:19)
2023-06-12 20:40:58 error: uncaughtException: ⨯ Unable to compile TypeScript:
[96msrc/scripts/createGatedPost.ts[0m:[93m177[0m:[93m1[0m - [91merror[0m[90m TS1005: [0m'}' expected.

[7m177[0m 
[7m   [0m [91m[0m

  [96msrc/scripts/createGatedPost.ts[0m:[93m36[0m:[93m82[0m
    [7m36[0m export async function createPost(text: string, msgSender: string, value: number) {
    [7m  [0m [96m                                                                                 ~[0m
    The parser expected to find a '}' to match the '{' token here.

TSError: ⨯ Unable to compile TypeScript:
[96msrc/scripts/createGatedPost.ts[0m:[93m177[0m:[93m1[0m - [91merror[0m[90m TS1005: [0m'}' expected.

[7m177[0m 
[7m   [0m [91m[0m

  [96msrc/scripts/createGatedPost.ts[0m:[93m36[0m:[93m82[0m
    [7m36[0m export async function createPost(text: string, msgSender: string, value: number) {
    [7m  [0m [96m                                                                                 ~[0m
    The parser expected to find a '}' to match the '{' token here.

    at createTSError (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:859:12)
    at reportTSError (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:863:19)
    at /home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1379:34
    at Object.compile (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1458:13)
    at Module.m._compile (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1617:30)
    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)
    at Object.require.extensions.<computed> [as .ts] (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1621:12)
    at Module.load (node:internal/modules/cjs/loader:1103:32)
    at Function.Module._load (node:internal/modules/cjs/loader:942:12)
    at Module.require (node:internal/modules/cjs/loader:1127:19)
2023-06-12 20:41:06 error: uncaughtException: ⨯ Unable to compile TypeScript:
[96msrc/scripts/createGatedPost.ts[0m:[93m177[0m:[93m1[0m - [91merror[0m[90m TS1005: [0m'}' expected.

[7m177[0m 
[7m   [0m [91m[0m

  [96msrc/scripts/createGatedPost.ts[0m:[93m36[0m:[93m82[0m
    [7m36[0m export async function createPost(text: string, msgSender: string, value: number) {
    [7m  [0m [96m                                                                                 ~[0m
    The parser expected to find a '}' to match the '{' token here.

TSError: ⨯ Unable to compile TypeScript:
[96msrc/scripts/createGatedPost.ts[0m:[93m177[0m:[93m1[0m - [91merror[0m[90m TS1005: [0m'}' expected.

[7m177[0m 
[7m   [0m [91m[0m

  [96msrc/scripts/createGatedPost.ts[0m:[93m36[0m:[93m82[0m
    [7m36[0m export async function createPost(text: string, msgSender: string, value: number) {
    [7m  [0m [96m                                                                                 ~[0m
    The parser expected to find a '}' to match the '{' token here.

    at createTSError (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:859:12)
    at reportTSError (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:863:19)
    at /home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1379:34
    at Object.compile (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1458:13)
    at Module.m._compile (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1617:30)
    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)
    at Object.require.extensions.<computed> [as .ts] (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1621:12)
    at Module.load (node:internal/modules/cjs/loader:1103:32)
    at Function.Module._load (node:internal/modules/cjs/loader:942:12)
    at Module.require (node:internal/modules/cjs/loader:1127:19)
2023-06-12 20:42:23 error: uncaughtException: ⨯ Unable to compile TypeScript:
[96msrc/scripts/createGatedPost.ts[0m:[93m178[0m:[93m1[0m - [91merror[0m[90m TS1005: [0m'}' expected.

[7m178[0m 
[7m   [0m [91m[0m

  [96msrc/scripts/createGatedPost.ts[0m:[93m36[0m:[93m82[0m
    [7m36[0m export async function createPost(text: string, msgSender: string, value: number) {
    [7m  [0m [96m                                                                                 ~[0m
    The parser expected to find a '}' to match the '{' token here.

TSError: ⨯ Unable to compile TypeScript:
[96msrc/scripts/createGatedPost.ts[0m:[93m178[0m:[93m1[0m - [91merror[0m[90m TS1005: [0m'}' expected.

[7m178[0m 
[7m   [0m [91m[0m

  [96msrc/scripts/createGatedPost.ts[0m:[93m36[0m:[93m82[0m
    [7m36[0m export async function createPost(text: string, msgSender: string, value: number) {
    [7m  [0m [96m                                                                                 ~[0m
    The parser expected to find a '}' to match the '{' token here.

    at createTSError (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:859:12)
    at reportTSError (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:863:19)
    at /home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1379:34
    at Object.compile (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1458:13)
    at Module.m._compile (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1617:30)
    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)
    at Object.require.extensions.<computed> [as .ts] (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1621:12)
    at Module.load (node:internal/modules/cjs/loader:1103:32)
    at Function.Module._load (node:internal/modules/cjs/loader:942:12)
    at Module.require (node:internal/modules/cjs/loader:1127:19)
2023-06-12 20:46:50 error: uncaughtException: ⨯ Unable to compile TypeScript:
[96msrc/scripts/createGatedPost.ts[0m:[93m185[0m:[93m1[0m - [91merror[0m[90m TS1128: [0mDeclaration or statement expected.

[7m185[0m }
[7m   [0m [91m~[0m

TSError: ⨯ Unable to compile TypeScript:
[96msrc/scripts/createGatedPost.ts[0m:[93m185[0m:[93m1[0m - [91merror[0m[90m TS1128: [0mDeclaration or statement expected.

[7m185[0m }
[7m   [0m [91m~[0m

    at createTSError (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:859:12)
    at reportTSError (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:863:19)
    at /home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1379:34
    at Object.compile (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1458:13)
    at Module.m._compile (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1617:30)
    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)
    at Object.require.extensions.<computed> [as .ts] (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1621:12)
    at Module.load (node:internal/modules/cjs/loader:1103:32)
    at Function.Module._load (node:internal/modules/cjs/loader:942:12)
    at Module.require (node:internal/modules/cjs/loader:1127:19)
2023-06-12 21:02:15 error: uncaughtException: ⨯ Unable to compile TypeScript:
[96msrc/services/users.service.ts[0m:[93m96[0m:[93m3[0m - [91merror[0m[90m TS1472: [0m'catch' or 'finally' expected.

[7m96[0m   }
[7m  [0m [91m  ~[0m

TSError: ⨯ Unable to compile TypeScript:
[96msrc/services/users.service.ts[0m:[93m96[0m:[93m3[0m - [91merror[0m[90m TS1472: [0m'catch' or 'finally' expected.

[7m96[0m   }
[7m  [0m [91m  ~[0m

    at createTSError (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:859:12)
    at reportTSError (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:863:19)
    at /home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1379:34
    at Object.compile (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1458:13)
    at Module.m._compile (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1617:30)
    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)
    at Object.require.extensions.<computed> [as .ts] (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1621:12)
    at Module.load (node:internal/modules/cjs/loader:1103:32)
    at Function.Module._load (node:internal/modules/cjs/loader:942:12)
    at Module.require (node:internal/modules/cjs/loader:1127:19)
2023-06-12 21:05:22 error: uncaughtException: ⨯ Unable to compile TypeScript:
[96msrc/services/users.service.ts[0m:[93m96[0m:[93m3[0m - [91merror[0m[90m TS1472: [0m'catch' or 'finally' expected.

[7m96[0m   }
[7m  [0m [91m  ~[0m

TSError: ⨯ Unable to compile TypeScript:
[96msrc/services/users.service.ts[0m:[93m96[0m:[93m3[0m - [91merror[0m[90m TS1472: [0m'catch' or 'finally' expected.

[7m96[0m   }
[7m  [0m [91m  ~[0m

    at createTSError (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:859:12)
    at reportTSError (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:863:19)
    at /home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1379:34
    at Object.compile (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1458:13)
    at Module.m._compile (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1617:30)
    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)
    at Object.require.extensions.<computed> [as .ts] (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1621:12)
    at Module.load (node:internal/modules/cjs/loader:1103:32)
    at Function.Module._load (node:internal/modules/cjs/loader:942:12)
    at Module.require (node:internal/modules/cjs/loader:1127:19)
2023-06-12 21:05:30 error: uncaughtException: ⨯ Unable to compile TypeScript:
[96msrc/services/users.service.ts[0m:[93m96[0m:[93m3[0m - [91merror[0m[90m TS1472: [0m'catch' or 'finally' expected.

[7m96[0m   }
[7m  [0m [91m  ~[0m

TSError: ⨯ Unable to compile TypeScript:
[96msrc/services/users.service.ts[0m:[93m96[0m:[93m3[0m - [91merror[0m[90m TS1472: [0m'catch' or 'finally' expected.

[7m96[0m   }
[7m  [0m [91m  ~[0m

    at createTSError (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:859:12)
    at reportTSError (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:863:19)
    at /home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1379:34
    at Object.compile (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1458:13)
    at Module.m._compile (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1617:30)
    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)
    at Object.require.extensions.<computed> [as .ts] (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1621:12)
    at Module.load (node:internal/modules/cjs/loader:1103:32)
    at Function.Module._load (node:internal/modules/cjs/loader:942:12)
    at Module.require (node:internal/modules/cjs/loader:1127:19)
2023-06-12 21:05:40 error: uncaughtException: ⨯ Unable to compile TypeScript:
[96msrc/services/users.service.ts[0m:[93m96[0m:[93m3[0m - [91merror[0m[90m TS1472: [0m'catch' or 'finally' expected.

[7m96[0m   }
[7m  [0m [91m  ~[0m

TSError: ⨯ Unable to compile TypeScript:
[96msrc/services/users.service.ts[0m:[93m96[0m:[93m3[0m - [91merror[0m[90m TS1472: [0m'catch' or 'finally' expected.

[7m96[0m   }
[7m  [0m [91m  ~[0m

    at createTSError (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:859:12)
    at reportTSError (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:863:19)
    at /home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1379:34
    at Object.compile (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1458:13)
    at Module.m._compile (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1617:30)
    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)
    at Object.require.extensions.<computed> [as .ts] (/home/at0x/hackzor/stools/packages/daback/node_modules/ts-node/src/index.ts:1621:12)
    at Module.load (node:internal/modules/cjs/loader:1103:32)
    at Function.Module._load (node:internal/modules/cjs/loader:942:12)
    at Module.require (node:internal/modules/cjs/loader:1127:19)
2023-06-12 21:07:50 error: uncaughtException: Publication not found - 0x85d9-0x010 - remember it has to be indexed, follow metadata standards to be traceable and not fail data availability verification.: {"response":{"errors":[{"message":"Publication not found - 0x85d9-0x010 - remember it has to be indexed, follow metadata standards to be traceable and not fail data availability verification.","locations":[{"line":2,"column":3}],"path":["result"],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Publication not found - 0x85d9-0x010 - remember it has to be indexed, follow metadata standards to be traceable and not fail data availability verification.","    at validateInternalPublicationIdExists (/usr/src/app/packages/api-lens/lib/services/publication.service.js:489:15)","    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","    at async validateNotHiddenPublication (/usr/src/app/packages/api-lens/lib/services/publication.service.js:495:25)","    at async Promise.all (index 1)","    at async PublicationResolver.createCommentTypedData (/usr/src/app/packages/api-lens/lib/graphql/resolvers/publications/publication-resolver.js:236:34)","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)","    at async /usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:83:26","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)","    at async /usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:83:26","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)"]}}}],"data":null,"status":200,"headers":{}},"request":{"query":"mutation CreateCommentTypedData($request: CreatePublicCommentRequest!, $options: TypedDataOptions) {\n  result: createCommentTypedData(request: $request, options: $options) {\n    ...CreateCommentTypedData\n  }\n}\n\nfragment CreateCommentTypedData on CreateCommentBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      CommentWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      profileIdPointed\n      pubIdPointed\n      collectModule\n      collectModuleInitData\n      referenceModuleData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","publicationId":"0x85d9-0x010","contentURI":"https://arweave.net/hHDOsP7hRR4ZoqbICsWr58wRmjjoQ4Kz3WOt-IvO4w8","collectModule":{"simpleCollectModule":{"followerOnly":false}}}}}}
Error: Publication not found - 0x85d9-0x010 - remember it has to be indexed, follow metadata standards to be traceable and not fail data availability verification.: {"response":{"errors":[{"message":"Publication not found - 0x85d9-0x010 - remember it has to be indexed, follow metadata standards to be traceable and not fail data availability verification.","locations":[{"line":2,"column":3}],"path":["result"],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Publication not found - 0x85d9-0x010 - remember it has to be indexed, follow metadata standards to be traceable and not fail data availability verification.","    at validateInternalPublicationIdExists (/usr/src/app/packages/api-lens/lib/services/publication.service.js:489:15)","    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","    at async validateNotHiddenPublication (/usr/src/app/packages/api-lens/lib/services/publication.service.js:495:25)","    at async Promise.all (index 1)","    at async PublicationResolver.createCommentTypedData (/usr/src/app/packages/api-lens/lib/graphql/resolvers/publications/publication-resolver.js:236:34)","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)","    at async /usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:83:26","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)","    at async /usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:83:26","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)"]}}}],"data":null,"status":200,"headers":{}},"request":{"query":"mutation CreateCommentTypedData($request: CreatePublicCommentRequest!, $options: TypedDataOptions) {\n  result: createCommentTypedData(request: $request, options: $options) {\n    ...CreateCommentTypedData\n  }\n}\n\nfragment CreateCommentTypedData on CreateCommentBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      CommentWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      profileIdPointed\n      pubIdPointed\n      collectModule\n      collectModuleInitData\n      referenceModuleData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","publicationId":"0x85d9-0x010","contentURI":"https://arweave.net/hHDOsP7hRR4ZoqbICsWr58wRmjjoQ4Kz3WOt-IvO4w8","collectModule":{"simpleCollectModule":{"followerOnly":false}}}}}}
    at makeRequest (/home/at0x/hackzor/stools/packages/daback/node_modules/graphql-request/src/index.ts:441:11)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-06-12 21:09:20 error: uncaughtException: Publication not found - 0x85d9-0x11 - remember it has to be indexed, follow metadata standards to be traceable and not fail data availability verification.: {"response":{"errors":[{"message":"Publication not found - 0x85d9-0x11 - remember it has to be indexed, follow metadata standards to be traceable and not fail data availability verification.","locations":[{"line":2,"column":3}],"path":["result"],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Publication not found - 0x85d9-0x11 - remember it has to be indexed, follow metadata standards to be traceable and not fail data availability verification.","    at validateInternalPublicationIdExists (/usr/src/app/packages/api-lens/lib/services/publication.service.js:489:15)","    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","    at async validateNotHiddenPublication (/usr/src/app/packages/api-lens/lib/services/publication.service.js:495:25)","    at async Promise.all (index 1)","    at async PublicationResolver.createCommentTypedData (/usr/src/app/packages/api-lens/lib/graphql/resolvers/publications/publication-resolver.js:236:34)","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)","    at async /usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:83:26","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)","    at async /usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:83:26","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)"]}}}],"data":null,"status":200,"headers":{}},"request":{"query":"mutation CreateCommentTypedData($request: CreatePublicCommentRequest!, $options: TypedDataOptions) {\n  result: createCommentTypedData(request: $request, options: $options) {\n    ...CreateCommentTypedData\n  }\n}\n\nfragment CreateCommentTypedData on CreateCommentBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      CommentWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      profileIdPointed\n      pubIdPointed\n      collectModule\n      collectModuleInitData\n      referenceModuleData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","publicationId":"0x85d9-0x11","contentURI":"https://arweave.net/p1UfjZJfEvS-bxpov45n0LWy-0CfeApwMz5q-bmeSYQ","collectModule":{"simpleCollectModule":{"followerOnly":false}}}}}}
Error: Publication not found - 0x85d9-0x11 - remember it has to be indexed, follow metadata standards to be traceable and not fail data availability verification.: {"response":{"errors":[{"message":"Publication not found - 0x85d9-0x11 - remember it has to be indexed, follow metadata standards to be traceable and not fail data availability verification.","locations":[{"line":2,"column":3}],"path":["result"],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Publication not found - 0x85d9-0x11 - remember it has to be indexed, follow metadata standards to be traceable and not fail data availability verification.","    at validateInternalPublicationIdExists (/usr/src/app/packages/api-lens/lib/services/publication.service.js:489:15)","    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","    at async validateNotHiddenPublication (/usr/src/app/packages/api-lens/lib/services/publication.service.js:495:25)","    at async Promise.all (index 1)","    at async PublicationResolver.createCommentTypedData (/usr/src/app/packages/api-lens/lib/graphql/resolvers/publications/publication-resolver.js:236:34)","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)","    at async /usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:83:26","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)","    at async /usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:83:26","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)"]}}}],"data":null,"status":200,"headers":{}},"request":{"query":"mutation CreateCommentTypedData($request: CreatePublicCommentRequest!, $options: TypedDataOptions) {\n  result: createCommentTypedData(request: $request, options: $options) {\n    ...CreateCommentTypedData\n  }\n}\n\nfragment CreateCommentTypedData on CreateCommentBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      CommentWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      profileIdPointed\n      pubIdPointed\n      collectModule\n      collectModuleInitData\n      referenceModuleData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","publicationId":"0x85d9-0x11","contentURI":"https://arweave.net/p1UfjZJfEvS-bxpov45n0LWy-0CfeApwMz5q-bmeSYQ","collectModule":{"simpleCollectModule":{"followerOnly":false}}}}}}
    at makeRequest (/home/at0x/hackzor/stools/packages/daback/node_modules/graphql-request/src/index.ts:441:11)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-06-12 21:11:06 error: uncaughtException: Publication not found - 0x85d9-0x12 - remember it has to be indexed, follow metadata standards to be traceable and not fail data availability verification.: {"response":{"errors":[{"message":"Publication not found - 0x85d9-0x12 - remember it has to be indexed, follow metadata standards to be traceable and not fail data availability verification.","locations":[{"line":2,"column":3}],"path":["result"],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Publication not found - 0x85d9-0x12 - remember it has to be indexed, follow metadata standards to be traceable and not fail data availability verification.","    at validateInternalPublicationIdExists (/usr/src/app/packages/api-lens/lib/services/publication.service.js:489:15)","    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","    at async validateNotHiddenPublication (/usr/src/app/packages/api-lens/lib/services/publication.service.js:495:25)","    at async Promise.all (index 1)","    at async PublicationResolver.createCommentTypedData (/usr/src/app/packages/api-lens/lib/graphql/resolvers/publications/publication-resolver.js:236:34)","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)","    at async /usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:83:26","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)","    at async /usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:83:26","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)"]}}}],"data":null,"status":200,"headers":{}},"request":{"query":"mutation CreateCommentTypedData($request: CreatePublicCommentRequest!, $options: TypedDataOptions) {\n  result: createCommentTypedData(request: $request, options: $options) {\n    ...CreateCommentTypedData\n  }\n}\n\nfragment CreateCommentTypedData on CreateCommentBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      CommentWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      profileIdPointed\n      pubIdPointed\n      collectModule\n      collectModuleInitData\n      referenceModuleData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","publicationId":"0x85d9-0x12","contentURI":"https://arweave.net/GourUtw03CaTPGzRMBMTyICLXVaIMX2o_RRSAsyKCCs","collectModule":{"simpleCollectModule":{"followerOnly":false}}}}}}
Error: Publication not found - 0x85d9-0x12 - remember it has to be indexed, follow metadata standards to be traceable and not fail data availability verification.: {"response":{"errors":[{"message":"Publication not found - 0x85d9-0x12 - remember it has to be indexed, follow metadata standards to be traceable and not fail data availability verification.","locations":[{"line":2,"column":3}],"path":["result"],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Publication not found - 0x85d9-0x12 - remember it has to be indexed, follow metadata standards to be traceable and not fail data availability verification.","    at validateInternalPublicationIdExists (/usr/src/app/packages/api-lens/lib/services/publication.service.js:489:15)","    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","    at async validateNotHiddenPublication (/usr/src/app/packages/api-lens/lib/services/publication.service.js:495:25)","    at async Promise.all (index 1)","    at async PublicationResolver.createCommentTypedData (/usr/src/app/packages/api-lens/lib/graphql/resolvers/publications/publication-resolver.js:236:34)","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)","    at async /usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:83:26","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)","    at async /usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:83:26","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)"]}}}],"data":null,"status":200,"headers":{}},"request":{"query":"mutation CreateCommentTypedData($request: CreatePublicCommentRequest!, $options: TypedDataOptions) {\n  result: createCommentTypedData(request: $request, options: $options) {\n    ...CreateCommentTypedData\n  }\n}\n\nfragment CreateCommentTypedData on CreateCommentBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      CommentWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      profileIdPointed\n      pubIdPointed\n      collectModule\n      collectModuleInitData\n      referenceModuleData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","publicationId":"0x85d9-0x12","contentURI":"https://arweave.net/GourUtw03CaTPGzRMBMTyICLXVaIMX2o_RRSAsyKCCs","collectModule":{"simpleCollectModule":{"followerOnly":false}}}}}}
    at makeRequest (/home/at0x/hackzor/stools/packages/daback/node_modules/graphql-request/src/index.ts:441:11)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-06-12 21:11:52 error: uncaughtException: Publication not found - 0x85d9-0x13 - remember it has to be indexed, follow metadata standards to be traceable and not fail data availability verification.: {"response":{"errors":[{"message":"Publication not found - 0x85d9-0x13 - remember it has to be indexed, follow metadata standards to be traceable and not fail data availability verification.","locations":[{"line":2,"column":3}],"path":["result"],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Publication not found - 0x85d9-0x13 - remember it has to be indexed, follow metadata standards to be traceable and not fail data availability verification.","    at validateInternalPublicationIdExists (/usr/src/app/packages/api-lens/lib/services/publication.service.js:489:15)","    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","    at async validateNotHiddenPublication (/usr/src/app/packages/api-lens/lib/services/publication.service.js:495:25)","    at async Promise.all (index 1)","    at async PublicationResolver.createCommentTypedData (/usr/src/app/packages/api-lens/lib/graphql/resolvers/publications/publication-resolver.js:236:34)","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)","    at async /usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:83:26","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)","    at async /usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:83:26","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)"]}}}],"data":null,"status":200,"headers":{}},"request":{"query":"mutation CreateCommentTypedData($request: CreatePublicCommentRequest!, $options: TypedDataOptions) {\n  result: createCommentTypedData(request: $request, options: $options) {\n    ...CreateCommentTypedData\n  }\n}\n\nfragment CreateCommentTypedData on CreateCommentBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      CommentWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      profileIdPointed\n      pubIdPointed\n      collectModule\n      collectModuleInitData\n      referenceModuleData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","publicationId":"0x85d9-0x13","contentURI":"https://arweave.net/qNO9oJw3aGQam9d0a3fMg-0DBEkFidBLLtulpoV8B8w","collectModule":{"simpleCollectModule":{"followerOnly":false}}}}}}
Error: Publication not found - 0x85d9-0x13 - remember it has to be indexed, follow metadata standards to be traceable and not fail data availability verification.: {"response":{"errors":[{"message":"Publication not found - 0x85d9-0x13 - remember it has to be indexed, follow metadata standards to be traceable and not fail data availability verification.","locations":[{"line":2,"column":3}],"path":["result"],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Publication not found - 0x85d9-0x13 - remember it has to be indexed, follow metadata standards to be traceable and not fail data availability verification.","    at validateInternalPublicationIdExists (/usr/src/app/packages/api-lens/lib/services/publication.service.js:489:15)","    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","    at async validateNotHiddenPublication (/usr/src/app/packages/api-lens/lib/services/publication.service.js:495:25)","    at async Promise.all (index 1)","    at async PublicationResolver.createCommentTypedData (/usr/src/app/packages/api-lens/lib/graphql/resolvers/publications/publication-resolver.js:236:34)","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)","    at async /usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:83:26","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)","    at async /usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:83:26","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)"]}}}],"data":null,"status":200,"headers":{}},"request":{"query":"mutation CreateCommentTypedData($request: CreatePublicCommentRequest!, $options: TypedDataOptions) {\n  result: createCommentTypedData(request: $request, options: $options) {\n    ...CreateCommentTypedData\n  }\n}\n\nfragment CreateCommentTypedData on CreateCommentBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      CommentWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      profileIdPointed\n      pubIdPointed\n      collectModule\n      collectModuleInitData\n      referenceModuleData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","publicationId":"0x85d9-0x13","contentURI":"https://arweave.net/qNO9oJw3aGQam9d0a3fMg-0DBEkFidBLLtulpoV8B8w","collectModule":{"simpleCollectModule":{"followerOnly":false}}}}}}
    at makeRequest (/home/at0x/hackzor/stools/packages/daback/node_modules/graphql-request/src/index.ts:441:11)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-06-12 21:13:07 error: uncaughtException: Publication not found - 0x85d9-0x14 - remember it has to be indexed, follow metadata standards to be traceable and not fail data availability verification.: {"response":{"errors":[{"message":"Publication not found - 0x85d9-0x14 - remember it has to be indexed, follow metadata standards to be traceable and not fail data availability verification.","locations":[{"line":2,"column":3}],"path":["result"],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Publication not found - 0x85d9-0x14 - remember it has to be indexed, follow metadata standards to be traceable and not fail data availability verification.","    at validateInternalPublicationIdExists (/usr/src/app/packages/api-lens/lib/services/publication.service.js:489:15)","    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","    at async validateNotHiddenPublication (/usr/src/app/packages/api-lens/lib/services/publication.service.js:495:25)","    at async Promise.all (index 1)","    at async PublicationResolver.createCommentTypedData (/usr/src/app/packages/api-lens/lib/graphql/resolvers/publications/publication-resolver.js:236:34)","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)","    at async /usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:83:26","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)","    at async /usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:83:26","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)"]}}}],"data":null,"status":200,"headers":{}},"request":{"query":"mutation CreateCommentTypedData($request: CreatePublicCommentRequest!, $options: TypedDataOptions) {\n  result: createCommentTypedData(request: $request, options: $options) {\n    ...CreateCommentTypedData\n  }\n}\n\nfragment CreateCommentTypedData on CreateCommentBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      CommentWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      profileIdPointed\n      pubIdPointed\n      collectModule\n      collectModuleInitData\n      referenceModuleData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","publicationId":"0x85d9-0x14","contentURI":"https://arweave.net/BoiAsPAMBYt5Ky8nhz83AjSwy8_kOzZYvKPTuQPdvDM","collectModule":{"simpleCollectModule":{"followerOnly":false}}}}}}
Error: Publication not found - 0x85d9-0x14 - remember it has to be indexed, follow metadata standards to be traceable and not fail data availability verification.: {"response":{"errors":[{"message":"Publication not found - 0x85d9-0x14 - remember it has to be indexed, follow metadata standards to be traceable and not fail data availability verification.","locations":[{"line":2,"column":3}],"path":["result"],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: Publication not found - 0x85d9-0x14 - remember it has to be indexed, follow metadata standards to be traceable and not fail data availability verification.","    at validateInternalPublicationIdExists (/usr/src/app/packages/api-lens/lib/services/publication.service.js:489:15)","    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","    at async validateNotHiddenPublication (/usr/src/app/packages/api-lens/lib/services/publication.service.js:495:25)","    at async Promise.all (index 1)","    at async PublicationResolver.createCommentTypedData (/usr/src/app/packages/api-lens/lib/graphql/resolvers/publications/publication-resolver.js:236:34)","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)","    at async /usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:83:26","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)","    at async /usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:83:26","    at async dispatchHandler (/usr/src/app/node_modules/type-graphql/dist/resolvers/helpers.js:82:24)"]}}}],"data":null,"status":200,"headers":{}},"request":{"query":"mutation CreateCommentTypedData($request: CreatePublicCommentRequest!, $options: TypedDataOptions) {\n  result: createCommentTypedData(request: $request, options: $options) {\n    ...CreateCommentTypedData\n  }\n}\n\nfragment CreateCommentTypedData on CreateCommentBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      CommentWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      profileIdPointed\n      pubIdPointed\n      collectModule\n      collectModuleInitData\n      referenceModuleData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","publicationId":"0x85d9-0x14","contentURI":"https://arweave.net/BoiAsPAMBYt5Ky8nhz83AjSwy8_kOzZYvKPTuQPdvDM","collectModule":{"simpleCollectModule":{"followerOnly":false}}}}}}
    at makeRequest (/home/at0x/hackzor/stools/packages/daback/node_modules/graphql-request/src/index.ts:441:11)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2023-06-12 21:14:42 error: uncaughtException: Variable "$request" got invalid value "0x15" at "request.publicationId"; Expected type "InternalPublicationId". String supplied is not a valid InternalPublicationId - 0x15: {"response":{"errors":[{"message":"Variable \"$request\" got invalid value \"0x15\" at \"request.publicationId\"; Expected type \"InternalPublicationId\". String supplied is not a valid InternalPublicationId - 0x15","locations":[{"line":1,"column":33}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: String supplied is not a valid InternalPublicationId - 0x15","    at InternalPublicationId.validate (/usr/src/app/packages/api-lens-custom-types/lib/internal-publication-id.type.js:19:19)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:9:14)","    at new StringType (/usr/src/app/packages/custom-types-shared/lib/base-types/string.type.js:10:9)","    at new InternalPublicationId (/usr/src/app/packages/api-lens-custom-types/lib/internal-publication-id.type.js:12:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/internal-publication-id.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValue (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:37:10)","    at _loop (/usr/src/app/node_modules/graphql/execution/values.js:109:69)","    at coerceVariableValues (/usr/src/app/node_modules/graphql/execution/values.js:121:16)","    at getVariableValues (/usr/src/app/node_modules/graphql/execution/values.js:50:19)","    at buildExecutionContext (/usr/src/app/node_modules/graphql/execution/execute.js:203:61)","    at executeImpl (/usr/src/app/node_modules/graphql/execution/execute.js:101:20)","    at Object.execute (/usr/src/app/node_modules/graphql/execution/execute.js:60:35)"]}}}],"status":400,"headers":{}},"request":{"query":"mutation CreateCommentTypedData($request: CreatePublicCommentRequest!, $options: TypedDataOptions) {\n  result: createCommentTypedData(request: $request, options: $options) {\n    ...CreateCommentTypedData\n  }\n}\n\nfragment CreateCommentTypedData on CreateCommentBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      CommentWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      profileIdPointed\n      pubIdPointed\n      collectModule\n      collectModuleInitData\n      referenceModuleData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","publicationId":"0x15","contentURI":"https://arweave.net/ya5gqwTGyC9a_FiFEyBHu_2O-0q2oj00_wQsxHwuvww","collectModule":{"simpleCollectModule":{"followerOnly":false}}}}}}
Error: Variable "$request" got invalid value "0x15" at "request.publicationId"; Expected type "InternalPublicationId". String supplied is not a valid InternalPublicationId - 0x15: {"response":{"errors":[{"message":"Variable \"$request\" got invalid value \"0x15\" at \"request.publicationId\"; Expected type \"InternalPublicationId\". String supplied is not a valid InternalPublicationId - 0x15","locations":[{"line":1,"column":33}],"extensions":{"code":"GRAPHQL_VALIDATION_FAILED","exception":{"stacktrace":["ValidationError: String supplied is not a valid InternalPublicationId - 0x15","    at InternalPublicationId.validate (/usr/src/app/packages/api-lens-custom-types/lib/internal-publication-id.type.js:19:19)","    at new BaseType (/usr/src/app/packages/custom-types-shared/lib/base-types/base-type.js:9:14)","    at new StringType (/usr/src/app/packages/custom-types-shared/lib/base-types/string.type.js:10:9)","    at new InternalPublicationId (/usr/src/app/packages/api-lens-custom-types/lib/internal-publication-id.type.js:12:9)","    at GraphQLScalarType.parseValue (/usr/src/app/packages/api-lens/lib/graphql/scalars/internal-publication-id.scalar.js:16:16)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:128:26)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:105:34)","    at coerceInputValueImpl (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:54:14)","    at coerceInputValue (/usr/src/app/node_modules/graphql/utilities/coerceInputValue.js:37:10)","    at _loop (/usr/src/app/node_modules/graphql/execution/values.js:109:69)","    at coerceVariableValues (/usr/src/app/node_modules/graphql/execution/values.js:121:16)","    at getVariableValues (/usr/src/app/node_modules/graphql/execution/values.js:50:19)","    at buildExecutionContext (/usr/src/app/node_modules/graphql/execution/execute.js:203:61)","    at executeImpl (/usr/src/app/node_modules/graphql/execution/execute.js:101:20)","    at Object.execute (/usr/src/app/node_modules/graphql/execution/execute.js:60:35)"]}}}],"status":400,"headers":{}},"request":{"query":"mutation CreateCommentTypedData($request: CreatePublicCommentRequest!, $options: TypedDataOptions) {\n  result: createCommentTypedData(request: $request, options: $options) {\n    ...CreateCommentTypedData\n  }\n}\n\nfragment CreateCommentTypedData on CreateCommentBroadcastItemResult {\n  id\n  expiresAt\n  typedData {\n    types {\n      CommentWithSig {\n        name\n        type\n      }\n    }\n    domain {\n      ...EIP712TypedDataDomain\n    }\n    value {\n      nonce\n      deadline\n      profileId\n      contentURI\n      profileIdPointed\n      pubIdPointed\n      collectModule\n      collectModuleInitData\n      referenceModuleData\n      referenceModule\n      referenceModuleInitData\n    }\n  }\n}\n\nfragment EIP712TypedDataDomain on EIP712TypedDataDomain {\n  name\n  chainId\n  version\n  verifyingContract\n}","variables":{"request":{"profileId":"0x85d9","publicationId":"0x15","contentURI":"https://arweave.net/ya5gqwTGyC9a_FiFEyBHu_2O-0q2oj00_wQsxHwuvww","collectModule":{"simpleCollectModule":{"followerOnly":false}}}}}}
    at makeRequest (/home/at0x/hackzor/stools/packages/daback/node_modules/graphql-request/src/index.ts:441:11)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
