{"version":3,"sources":["../../../src/controllers/lensControllers/querys.js"],"sourcesContent":["\n\nexport const challangeQuery = `\n    query Challenge {\n        challenge(request: { address: \"0xE6f3a0fF3b2Ef23ca6Bc8167F94efCe2e4E62aa2\" }) {\n            text\n        }\n    }\n`;\n\nexport const authenticationQuery = `\n    mutation Authenticate {\n        authenticate(request: {\n            address: \"0xE6f3a0fF3b2Ef23ca6Bc8167F94efCe2e4E62aa2\",\n            signature: \"0x9f3f60ab4b8165769b6fbe3ac9ae0291753c6023b641eb52500dde4166d1ca0b5fbe089c913e9824776d0215237be34adaa86ce8d17fec999bc95e80065acf631c\"\n        }) {\n            accessToken\n            refreshToken\n        }\n    }\n`;\n\nexport const searchProfilesQuery = `\n    query Search($query: Search!) {\n        search(request: {\n            query: $query,\n            type: PROFILE,\n            limit: 10\n        }) {\n            ... on ProfileSearchResult {\n                __typename \n                items {\n                ... on Profile {\n                    ...ProfileFields\n                }\n                }\n                pageInfo {\n                prev\n                totalCount\n                next\n                }\n            }\n        }\n    }\n    \n    fragment MediaFields on Media {\n        url\n        mimeType\n    }\n    \n    fragment ProfileFields on Profile {\n        profileId: id,\n        name\n        bio\n        attributes {\n            displayType\n            traitType\n            key\n            value\n        }\n        isFollowedByMe\n        isFollowing(who: null)\n        followNftAddress\n        metadata\n        isDefault\n        handle\n        picture {\n            ... on NftImage {\n                contractAddress\n                tokenId\n                uri\n                verified\n            }\n            ... on MediaSet {\n                original {\n                ...MediaFields\n                }\n            }\n        }\n        coverPicture {\n            ... on NftImage {\n                contractAddress\n                tokenId\n                uri\n                verified\n            }\n            ... on MediaSet {\n                original {\n                ...MediaFields\n                }\n            }\n        }\n        ownedBy\n        dispatcher {\n            address\n        }\n        stats {\n            totalFollowers\n            totalFollowing\n            totalPosts\n            totalComments\n            totalMirrors\n            totalPublications\n            totalCollects\n        }\n        followModule {\n            ... on FeeFollowModuleSettings {\n                type\n                amount {\n                    asset {\n                        name\n                        symbol\n                        decimals\n                        address\n                    }\n                    value\n                }\n                recipient\n            }\n            ... on ProfileFollowModuleSettings {\n                type\n                contractAddress\n            }\n            ... on RevertFollowModuleSettings {\n                type\n                contractAddress\n            }\n            ... on UnknownFollowModuleSettings {\n                type\n                contractAddress\n                followModuleReturnData\n            }\n        }\n    }\n`;\n\nexport const searchPublicationsQuery = `\nquery Search {\n    search(request: {\n      query: \"hello\",\n      type: PUBLICATION,\n      limit: 10\n    }) {\n      ... on PublicationSearchResult {\n         __typename \n        items {\n          __typename \n          ... on Comment {\n            ...CommentFields\n          }\n          ... on Post {\n            ...PostFields\n          }\n        }\n        pageInfo {\n          prev\n          totalCount\n          next\n        }\n      }\n      ... on ProfileSearchResult {\n        __typename \n        items {\n          ... on Profile {\n            ...ProfileFields\n          }\n        }\n        pageInfo {\n          prev\n          totalCount\n          next\n        }\n      }\n    }\n  }\n  \n  fragment MediaFields on Media {\n    url\n    mimeType\n  }\n  \n  fragment MirrorBaseFields on Mirror {\n    id\n    profile {\n      ...ProfileFields\n    }\n    stats {\n      ...PublicationStatsFields\n    }\n    metadata {\n      ...MetadataOutputFields\n    }\n    createdAt\n    collectModule {\n      ...CollectModuleFields\n    }\n    referenceModule {\n      ...ReferenceModuleFields\n    }\n    appId\n  }\n  \n  fragment ProfileFields on Profile {\n    profileId: id,\n    name\n    bio\n    attributes {\n       displayType\n       traitType\n       key\n       value\n    }\n    isFollowedByMe\n    isFollowing(who: null)\n    metadataUrl: metadata\n    isDefault\n    handle\n    picture {\n      ... on NftImage {\n        contractAddress\n        tokenId\n        uri\n        verified\n      }\n      ... on MediaSet {\n        original {\n          ...MediaFields\n        }\n      }\n    }\n    coverPicture {\n      ... on NftImage {\n        contractAddress\n        tokenId\n        uri\n        verified\n      }\n      ... on MediaSet {\n        original {\n          ...MediaFields\n        }\n      }\n    }\n    ownedBy\n    dispatcher {\n      address\n    }\n    stats {\n      totalFollowers\n      totalFollowing\n      totalPosts\n      totalComments\n      totalMirrors\n      totalPublications\n      totalCollects\n    }\n    followModule {\n      ...FollowModuleFields\n    }\n  }\n  \n  fragment PublicationStatsFields on PublicationStats { \n    totalAmountOfMirrors\n    totalAmountOfCollects\n    totalAmountOfComments\n  }\n  \n  fragment MetadataOutputFields on MetadataOutput {\n    name\n    description\n    content\n    media {\n      original {\n        ...MediaFields\n      }\n    }\n    attributes {\n      displayType\n      traitType\n      value\n    }\n  }\n  \n  fragment Erc20Fields on Erc20 {\n    name\n    symbol\n    decimals\n    address\n  }\n  \n  fragment PostFields on Post {\n    id\n    profile {\n      ...ProfileFields\n    }\n    stats {\n      ...PublicationStatsFields\n    }\n    metadata {\n      ...MetadataOutputFields\n    }\n    createdAt\n    collectModule {\n      ...CollectModuleFields\n    }\n    referenceModule {\n      ...ReferenceModuleFields\n    }\n    appId\n    hidden\n    reaction(request: null)\n    mirrors(by: null)\n    hasCollectedByMe\n  }\n  \n  fragment CommentBaseFields on Comment {\n    id\n    profile {\n      ...ProfileFields\n    }\n    stats {\n      ...PublicationStatsFields\n    }\n    metadata {\n      ...MetadataOutputFields\n    }\n    createdAt\n    collectModule {\n      ...CollectModuleFields\n    }\n    referenceModule {\n      ...ReferenceModuleFields\n    }\n    appId\n    hidden\n    reaction(request: null)\n    mirrors(by: null)\n    hasCollectedByMe\n  }\n  \n  fragment CommentFields on Comment {\n    ...CommentBaseFields\n    mainPost {\n      ... on Post {\n        ...PostFields\n      }\n      ... on Mirror {\n        ...MirrorBaseFields\n        mirrorOf {\n          ... on Post {\n             ...PostFields          \n          }\n          ... on Comment {\n             ...CommentMirrorOfFields        \n          }\n        }\n      }\n    }\n  }\n  \n  fragment CommentMirrorOfFields on Comment {\n    ...CommentBaseFields\n    mainPost {\n      ... on Post {\n        ...PostFields\n      }\n      ... on Mirror {\n         ...MirrorBaseFields\n      }\n    }\n  }\n  \n  fragment FollowModuleFields on FollowModule {\n    ... on FeeFollowModuleSettings {\n      type\n      amount {\n        asset {\n          name\n          symbol\n          decimals\n          address\n        }\n        value\n      }\n      recipient\n    }\n    ... on ProfileFollowModuleSettings {\n      type\n      contractAddress\n    }\n    ... on RevertFollowModuleSettings {\n      type\n      contractAddress\n    }\n    ... on UnknownFollowModuleSettings {\n      type\n      contractAddress\n      followModuleReturnData\n    }\n  }\n  \n  fragment CollectModuleFields on CollectModule {\n    __typename\n    ... on FreeCollectModuleSettings {\n      type\n      followerOnly\n      contractAddress\n    }\n    ... on FeeCollectModuleSettings {\n      type\n      amount {\n        asset {\n          ...Erc20Fields\n        }\n        value\n      }\n      recipient\n      referralFee\n    }\n    ... on LimitedFeeCollectModuleSettings {\n      type\n      collectLimit\n      amount {\n        asset {\n          ...Erc20Fields\n        }\n        value\n      }\n      recipient\n      referralFee\n    }\n    ... on LimitedTimedFeeCollectModuleSettings {\n      type\n      collectLimit\n      amount {\n        asset {\n          ...Erc20Fields\n        }\n        value\n      }\n      recipient\n      referralFee\n      endTimestamp\n    }\n    ... on RevertCollectModuleSettings {\n      type\n    }\n    ... on TimedFeeCollectModuleSettings {\n      type\n      amount {\n        asset {\n          ...Erc20Fields\n        }\n        value\n      }\n      recipient\n      referralFee\n      endTimestamp\n    }\n    ... on UnknownCollectModuleSettings {\n      type\n      contractAddress\n      collectModuleReturnData\n    }\n  }\n  \n  fragment ReferenceModuleFields on ReferenceModule {\n    ... on FollowOnlyReferenceModuleSettings {\n      type\n      contractAddress\n    }\n    ... on UnknownReferenceModuleSettings {\n      type\n      contractAddress\n      referenceModuleReturnData\n    }\n    ... on DegreesOfSeparationReferenceModuleSettings {\n      type\n      contractAddress\n      commentsRestricted\n      mirrorsRestricted\n      degreesOfSeparation\n    }\n}\n`;\n\nexport const createProfuileQuery = `\n    mutation CreateProfile(\n        $handle: CreateHandle!,\n        $profilePictureUri: Url!\n        ){\n        createProfile(request:{ \n                        handle: $handle,\n                        profilePictureUri: $profilePictureUri,\n                        followNFTURI: null,\n                        followModule: {\n                            freeFollowModule: true   \n                        }\n                    }) {\n        ... on RelayerResult {\n            txHash\n        }\n        ... on RelayError {\n            reason\n        }\n        __typename\n        }\n    }\n`;\n\nexport const createPostRequest = `\nmutation CreatePostTypedData {\n  createPostTypedData(request: {\n    profileId: \"0x856d\",\n    contentURI: \"ipfs://QmPogtffEF3oAbKERsoR4Ky8aTvLgBF5totp5AuF8YN6vl\",\n    collectModule: {\n      revertCollectModule: true\n    },\n    referenceModule: {\n      followerOnlyReferenceModule: false\n    }\n  }) {\n    id\n    expiresAt\n    typedData {\n      types {\n        PostWithSig {\n          name\n          type\n        }\n      }\n      domain {\n        name\n        chainId\n        version\n        verifyingContract\n      }\n      value {\n        nonce\n        deadline\n        profileId\n        contentURI\n        collectModule\n        collectModuleInitData\n        referenceModule\n        referenceModuleInitData\n      }\n    }\n  }\n}`;\n\nexport const refreshQuery = `\nmutation Refresh($refreshToken: String!) {\n  refresh(request: { refreshToken: $refreshToken }) {\n    accessToken\n    refreshToken\n  }\n}\n`;\n\nexport const challenge = `\nquery Challenge($address: EthereumAddress!) {\n  challenge(request: { address: $address }) {\n    text\n  }\n}\n`;\n\nexport const authenticate = `\n  mutation Authenticate(\n    $address: EthereumAddress!\n    $signature: Signature!\n  ) {\n    authenticate(request: {\n      address: $address,\n      signature: $signature\n    }) {\n      accessToken\n      refreshToken\n    }\n  }`;\n\nexport const createPostQuery = `\n  mutation CreatePostTypedData {\n  createPostTypedData(request: {\n    profileId: \"0x03\",\n    contentURI: \"ipfs://QmPogtffEF3oAbKERsoR4Ky8aTvLgBF5totp5AuF8YN6vl\",\n    collectModule: {\n      revertCollectModule: true\n    },\n    referenceModule: {\n      followerOnlyReferenceModule: false\n    }\n  }) {\n    id\n    expiresAt\n    typedData {\n      types {\n        PostWithSig {\n          name\n          type\n        }\n      }\n      domain {\n        name\n        chainId\n        version\n        verifyingContract\n      }\n      value {\n        nonce\n        deadline\n        profileId\n        contentURI\n        collectModule\n        collectModuleInitData\n        referenceModule\n        referenceModuleInitData\n      }\n    }\n  }\n}`;\n\nexport const dispatchPost= `\nmutation CreatePostViaDispatcher {\n  createPostViaDispatcher(\n    request: {\n      profileId: \"0x856d\"\n      contentURI: $contentURI\n      collectModule: { freeCollectModule: { followerOnly: true } }\n      referenceModule: { followerOnlyReferenceModule: false }\n    }\n  ) {\n    ... on RelayerResult {\n      txHash\n      txId\n    }\n    ... on RelayError {\n      reason\n    }\n  }\n}`;\n"],"names":["challangeQuery","authenticationQuery","searchProfilesQuery","searchPublicationsQuery","createProfuileQuery","createPostRequest","refreshQuery","challenge","authenticate","createPostQuery","dispatchPost"],"mappings":";;;;;;;;;;;IAEaA,cAAc;eAAdA;;IAQAC,mBAAmB;eAAnBA;;IAYAC,mBAAmB;eAAnBA;;IAkHAC,uBAAuB;eAAvBA;;IA8VAC,mBAAmB;eAAnBA;;IAwBAC,iBAAiB;eAAjBA;;IAyCAC,YAAY;eAAZA;;IASAC,SAAS;eAATA;;IAQAC,YAAY;eAAZA;;IAcAC,eAAe;eAAfA;;IAyCAC,YAAY;eAAZA;;;AA7mBN,MAAMV,iBAAiB,CAAC;;;;;;AAM/B,CAAC;AAEM,MAAMC,sBAAsB,CAAC;;;;;;;;;;AAUpC,CAAC;AAEM,MAAMC,sBAAsB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgHpC,CAAC;AAEM,MAAMC,0BAA0B,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4VxC,CAAC;AAEM,MAAMC,sBAAsB,CAAC;;;;;;;;;;;;;;;;;;;;;;AAsBpC,CAAC;AAEM,MAAMC,oBAAoB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAuCjC,CAAC;AAEK,MAAMC,eAAe,CAAC;;;;;;;AAO7B,CAAC;AAEM,MAAMC,YAAY,CAAC;;;;;;AAM1B,CAAC;AAEM,MAAMC,eAAe,CAAC;;;;;;;;;;;;GAY1B,CAAC;AAEG,MAAMC,kBAAkB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAuC/B,CAAC;AAEK,MAAMC,eAAc,CAAC;;;;;;;;;;;;;;;;;;CAkB3B,CAAC"}